The system should support multilingual interface.
The system should be designed in a manner that operational data is not lost in case of any failure of equipment or communication network.
The system should work even in an offline mode with the critical functionality.
The system should be designed to have satisfactory performance even in Police Stations connected on low-bandwidth.
The system should be implemented using Service Oriented Architecture (SOA) and have a modular design.
The system should be developed on Open Standards.
The system should be built on a common User Access and Authentication Service to ensure Single-Sign on for the end-user.
The system should be developed for a centralized deployment and maintenance.
The system should be developed to be deployed in a 3-tier datacenter architecture.
The system should be designed to have a n-tier architecture with the presentation logic separated from the business logic that is again separated from the data-access logic.
The system should be extensible to provide access to the interfaces through PDAs and mobile data terminals.
The system should adopt standardized formats and common metadata elements.
The system should be designed for access through browser-based systems and must impose minimal requirements on the client device.
The system must support multiple types of communication services for remote access.
The system should have capability to support public access to a subset of data and functionality.
The system should support multi-tier authentication where required.
The system should support SSL encrypted connections.
The system should support secure virtual private network connections.
The system should use HTTPS as the communication protocol, i.e., HTTP over an encrypted secure socket layer (SSL).
The system should run on multiple browsers.
The system should support selective encryption of the stored data.
The system should ensure secure transmission of data over the network and utilize SSL and 2-way digital signatures.
The system should ensure high standards of security and access control through a) Prevent cross-site scripting b) Validate the incoming data or user request c) Encode the incoming data or user request d) Prevent SQL Injection e) Utilize parameterized queries f) Sanitize the user-inputs g) Validate the data both at the client and server h) Do not allow hard delete and perform only soft tagging the row for deletion.
The system should ensure high scalability and performance through use of cache for storing frequent data.
The system should ensure high scalability and performance through use of AJAX based technology to improve user experience.
Leverage Asynchronous HTTP socket capabilities of web server for scalability and performance.
Host all the static content (documents, images) on the web server.
The search results should be fetched from the database in batches of 10 or 20 maximum as configured within the application.
The system should ensure high scalability and performance through display of records on the screen in batches.
The search should fetch only the fields that need to be displayed to the user.
A hierarchical cache should be configured and used for caching of results of most frequently used searches.
Database Indexes should be applied on the key columns used for searching.
Citizens can register their complaints with police and then based on the evidence, facts and following investigation, police shall take the complaint forward.
The Registration module acts as an interface between the police and citizens and it eases the approach, interaction and information exchange between police and complainants.
After a complaint is initiated, police initiates the investigation process.
The Investigation module of the CCTNS facilitates the investigation process and introduces operational efficiencies by automating most of the tasks that take place after initial entries are made during Registration.
A designated constable from each police station constantly interfaces with the courts.
The Prosecution module of the CCTNS aids this interfacing by providing a platform to record entries of the court interactions.
The Search module of the CCTNS gives police personnel the ability to execute a basic or advanced search on cases.
Using the search functionality, police personnel can search for a particular person, type of crime, modus operandi, property etc.
It also gives the user the ability to customize the results view by criminal/accused or by cases.
It makes reporting easy for police by enabling them to execute different types of queries such as monthly reporting, RTI related etc.
The Citizen Interface module of the CCTNS acts as a conduit for the information exchange between citizens and police units.
Citizens can use it as a tool to get information or acknowledgements from police.
The police in turn can use it to respond to citizens with very little turnaround time.
The Navigation module of the CCTNS provides role based landing pages which help in navigating through the CCTNS application.
It shows information such as cases assigned, alerts, pending tasks etc hence helping police personnel to plan better and execute with greater efficiency.
The Configuration module of the CCTNS helps keep the application configured according to the states' requirements in addition to keeping data elements and rules up to date.
With a proper configuration, information such as act and sections, state specific data, castes, tribes and property information can be created updated and deleted.
Account Management allows users to create, edit, and view accounts information.
It also allows the user to log in or out of the system.
Search Engine is the tool that assists the user in finding a specific item in the database.
It can receive search criteria, find search criteria, and return the results of the search.
Product Management allows sales personnel to manage the product line shown on the web site.
Shopping Cart is temporary storage for customers shopping on the web.
Items from the inventory can be reserved in a virtual cart until the customer decides to purchase them.
Purchasing and Payment is used to approve and transfer payment from buyers when purchasing items in the cart.
The system shall use SQL based database to store inventory information.
Customers will be able to create accounts to store their customer profiles, configure contact information, view their purchase history, and confirm orders.
Customers will be able to register, log in, and log out of their accounts.
Customer profiles will also include payment information, such as the ability to store credit card information, and address information.
Products will be stored in multi-tiered categories.
A category can contain sub categories or products.
The inventory management will allow for administrators to update the categories, the products placed in categories, and the specific product details.
Customers will also be able to add products into the shopping cart.
The shopping cart will clearly display the number of items in the cart, along with the total cost.
The customer will also be able to add to or remove products from the shopping cart prior to checkout and order confirmation.
Customers will be able to confirm the order after checkout.
If the order is incorrect, the customer will be able to revise and update their order.
The customer will then receive a confirmation email with the specific order details.
Customers will be presented with an unambiguous interface to assist in browsing the categories and products.
Customers will be able to search for products matching their search criteria.
The interface will be compatible with all major web browsers such as Internet Explorer, Mozilla Navigator, Mozilla Firefox, Opera, and Safari.
The system will implement an Application Interface to allow for various plug-ins to interact with the system.
The order database of WebOrder will communicate with the account system through a programmatic interface for the billing operations.
Through programmatic interface, WebOrder will transmit information of items ordered by customers to the Inventory management system.
The WebOrder system shall send an e-mail confirmation to the customer that the items they ordered will be delivered to the shipping address along with tracking number.
The WebOrder system shall send an e-mail to System Administrator regarding any technical queries from customers or sales people.
The system shall validate credit cards against fraud.
The system shall encrypt all sensitive information via https.
The system shall encrypt all customer data in database.
The system shall auto detect IP DOS attacks and block IP automatically.
The system shall detect consecutive failed login attempts.
The system shall be protected by open source firewall called Firestarter.
The system shall perform searches via Dijkstra's shortest path algorithm.
For returning customers, the system shall validate 'existing' credit card in system after each log in.
The system shall automatically compress image files that are too large in size.
The system will employ on demand asynchronous loading for faster execution of pages.
The system shall validate email address existence.
Within the same department: data base can be updated directly without any request.
Inter departments: request must be approved by a DA group member and faculty group member unless it came from a higher level group.
Inter faculties transfer: request can be made by any authorised user and approved by faculty group or higher level.
Transfer outside university should be approved by the university group.
Any administrative level user or inventory user can edit an asset that belongs to its department.
Same thing for faculty user, or university user in order to make modification if he is authorised to do it.
All fields of an edited asset can be modified except Ids.
A bulk entry file can be used.
Any DA group member or authorised inventory group member asset is owned by the department.
Any faculty member can add all related departments inventory.
Any university group member can add all assets in the inventory.
A bulk entry can be used to add many assets.
Request can be made by any authorised user.
After creation a request still pending waiting to be approved by an administrative level user according to that have this authority.
An inventory user should check returned asset and update inventory.
IT group members can create a new space and modify floor structure when they receive an exception request from any administrative level.
Any administration level or authorised inventory group member can display all pending requests waiting for approval from this level and approve those requests.
When request is treated user is notified by email.
Request is added to the waiting for execution list.
Inventory is updated when user receive requested asset.
Authentication is made by user name and a password for all users.
Administrative level working on administration computer.
Any administrative level user can delegate another user to execute some or all his authorized actions and this user acquires the role of inventory administrator.
Control information must be transferred, typically in the form of commands and replies from users, to telescope and instruments.
Control information on all controlled variables must be provided by all subsystems on request.
Operation of telescope, instruments and subsystems can be carried out at three different levels.
There will be parameters associated with each level of operation which define the status of the system and/or control the system.
Observing level allows a certain number of embedded tests, normally at a fairly high level.
Monitoring is also done at this level.
Maintenance level allows maintenance tables (for example, with instrument parameters) to be updated.
Test level allows the installation and testing of new packages or new releases.
Any low level test can be performed in this mode.
It shall be possible to update all non-protected parameter values.
Each node will have the capability to run at all operation levels.
When the Gemini 8m Telescopes telescope is used in its normal observing mode, there will be a single operator node for the telescope and two data acquisition and instrument control nodes.
The system will provide for one auxiliary data acquisition and instrument control nodes.
In addition, the system must support off-site observing modes.
The system will provide for a single off-site data acquisition and instrument control node.
The system will provide for a single local monitoring node and a single remote monitoring node.
There must be automatic procedures to implement startup and shutdown of the telescope and instruments.
These must allow startup and shutdown of instruments independently of the telescope and without affecting the telescope operation.
Reconfiguration procedures must exist, to change the observing environment.
The definition of the observing environments must be dynamic.
Operations staff have privileges to change the environment, meaning selecting a suitable combination of instruments.
The Gemini 8m Telescopes software covers all aspects of control and data acquisition related to the telescope, instruments, and auxiliary instrumentation.
It also covers all the operational aspects of the Gemini 8m Telescopes, including on-line scheduling and rescheduling.
The Gemini 8m Telescopes software must interface to the external software and clearly the interfaces are fully part of the Gemini 8m Telescopes software.
It shall be possible to monitor the quality (image quality, spectral resolution and signal to noise) of the astronomical data as it comes in.
Standard reduction procedures should be available for basic on-line calibrations of the observed data.
Quick-look data processing should be provided on the Gemini 8m Telescopes, with procedures suitable for fast on-line data preprocessing.
Quick-look should be usable within exposure sequences to provide results and feedback parameters to the control software in a programmed way, without the need for manual intervention.
Near-line processing should be available for simple data reductions required for data integrity validation.
On-line interactive access to the data archiving system should exist, so that access to this database is possible for Gemini 8m Telescopes users.
Computer access to star catalogues is also required, so that an automatic selection of candidate guide and standard stars can be made.
The Gemini 8m Telescopes software must be able to interface with all commercial software packages available on the Gemini 8m Telescopes and integrated into the Gemini 8m Telescopes operation.
For maintenance reasons and hardware independence, a clear hierarchical model must be implemented, supporting separation of logical and physical layers.
Peer-to-peer connectivity should only be used to overcome a demonstrated performance problem.
Bypassing the hierarchy (connected between grandmother and granddaughter with no path through the mother) should only be used for transmission of status information or bulk data, not control flow.
Individual instruments must be able to run fully independently.
Telescope software at the two telescopes must be maintained to be identical in the upper layers.
Additions of new instruments should aim, as a goal, at introducing no modification to already operational parts.
Switching to different configurations must be possible at any time with appropriate procedures.
There must be easy procedures to reconfigure the system when subsystems are modified or removed.
The number of main packages of software must be kept to a minimum to facilitate maintenance, but compatibly with the need to have the right degree of modularity.
Commercial and public domain packages should be used whenever possible.
Existing software packages should be reused wherever possible.
To increase software robustness, range checking and validity checking shall be supported before execution of any input command.
It must be possible to apply continuous monitoring to all subsystems on request, both when in operation and when idle, to check their operational status.
A measure of fault rates should be done during commissioning to establish baseline rates for system reliability monitoring.
There are to be recovery procedures to restart after error failure.
The system should be constantly monitoring active subsystems to be sure they are operating correctly before sending command to each subsystem.
Each subsystem should have a background task running whenever that subsystem is operational, performing such tasks as checking power supply levels, temperatures, performance, correct responses to commands.
The OCS is to be notified of any detected problems.
Each subsystem should provide a module for fully exercising all subsystem components, both hardware and software.
This module is executed automatically during start-up and on demand through the defined interface.
Problems are to be automatically reported to the OCS via the defined interface.
There are also software modules for testing the subsystem as an integrated portion of the entire system.
The software should be able to quickly bring the Gemini system to a safe state upon notification of such danger.
Subsystems must be able to detect such danger and report it appropriately.
In the event that the risk persists, subsystems must be able to move themselves into safe states to protect people and equipment.
Safety aspects shall be analyzed during the functional specification phase of the software.
All software is to be developed using typical modularization and standardization techniques.
The on-line data store holds astronomical data for the current observation.
Astronomical data are automatically stored onto the Archive medium (external software).
Telescope and instrument parameters are distributed in databases across the IOCs for those systems.
There is also a central repository maintained by the OCS that holds these databases for down-loading to the IOCs.
All additional data that is not required on line (configuration information, detailed documentation and operation logs) are stored in a relational DBMS.
All input and output data are logged appropriately.
System logging information should include all important events, properly timestamped and indexed.
All subsystems must group errors into these categories.
In addition, errors that result in an "alarm" should be described, along with the proper action required to acknowledge and eliminate the alarm condition.
Besides the time-stamp, error logging should provide enough information to trace the condition back to its apparent source, both in equipment and in event sequence.
There should be tools available to extract error (and other) logging information by subsystem component, time- sequence, previous events, and so on.
The THEMAS system shall control t he heating and cooling units that are defined as part of the THEMAS system.
The definitions of the individual heating and cooling systems reside in an initialization file.
The system shall read this file and the definitions shall be derived from the initialization data in the file.
The THEMAS system shall use the information contained in the initialization data file to determine which heating and cooling units are part of the THEMAS system.
There is one heating and cooling unit that corresponds to one thermostat in each of four quadrants on each of three floors of the office building.
Each thermostat shall have a unique identifier by which that thermostat is identified in the THEMAS system.
This procedure will load these definitions into the THEMAS software.
Each quadrant of each floor shall have a thermostat which is to be used to provide temperature data to the THEMAS system.
The initialization file shall contain a unique identifier for each thermostat that the system is to monitor.
These identifiers shall be read from the initialization file and loaded into the THEMAS system during the initialization process.
There shall be a maximum number of heating or cooling units that can be on at any given time.
This procedure loads the maximum number of concurrently running units allowed.
The maximum number of heating or cooling units that can run concurrently shall reside in an initialization file.
The maximum number of concurrently running units shall be read from the initialization file and stored in the THEMAS system.
The trigger value is used in combination with the current temperature to determine when a heating or cooling unit shall be turned on or off.
The trigger values shall reside in an initialization file.
This procedure shall read the initialization file and establish the trigger value from the data in that file.
The THEMAS system shall ensure the temperature reported by a given thermostat shall not exceed a maximum deviation value of 3 degrees Fahrenheit.
The overtemperature values shall reside in an initialization file.
This procedure shall read the initialization file and establish the overtemperature value from the data in that file.
The THEMAS system shall only respond to temperatures that are within a reasonable value.
The valid temperature range value shall reside in an initialization file.
This procedure shall read the initialization file and establish the valid temperature range from the data in it.
When the THEMAS system is initialized, it shall first turn off all the heating and cooling units.
Then, it shall check all the thermostats and determine if any thermostat's settings require a heating or cooling unit to be turned on back on.
This process shall first determine a known state of all the heating and cooling units by issuing a request to turn off all the units.
It shall then read the current temperature values and current temperature settings of each thermostat.
If the settings reflect a need for a heating or cooling unit to be turned on, the process shall issue a request to turn on the appropriate unit.
The THEMAS system shall only respond to temperatures from the thermostats that are within the specified valid range.
Two types of temperature data shall be recognized from the thermostats, the temperature setting and the current temperature.
This module shall process both types of data.
A current temperature value that is received from an individual thermostat shall be compared to the valid temperature range values.
If the current temperature value is strictly less than the lower value of the valid temperature range or if the received temperature value is strictly greater than the upper value of the valid temperature range, then the THEMAS system shall identify the current temperature value as an invalid temperature and shall output an invalid temperature status.
Otherwise, the THEMAS system shall output a valid temperature status.
A temperature setting value that is received from an individual thermostat shall be compared to the valid temperature range values.
If the temperature setting value is strictly less than the lower value of the valid temperature range or if the temperature setting value is strictly greater than the upper value of the valid temperature range, then the THEMAS system shall identify the temperature setting as an invalid temperature and shall output an invalid temperature status.
Otherwise, the THEMAS system shall realize the value for that thermostat's temperature setting.
The THEMAS system shall determine wh en a reported temperature or a changed temperature setting exceeds the limits set by the overtemperature values.
Temperatures that exceed the overtemperature limits shall be reported as such.
Temperatures that do not exceed these limits shall be output for subsequent processing.
The THEMAS system shall compare the reported temperature value to the temperature setting and detect when the temperature value exceeds the specified limits.
If T < LO or UO < T then the THEMAS system shall recognize this condition as the temperature limit has been exceeded.
In this case this process shall output the condition of the temperature limit having been exceeded.
If LO < = T < = UO, then this process shall output the temperature status.
When the current temperature value exceeds the current temperature setting by a pre-defined amount, the THEMAS system shall activate the appropriate heating or cooling unit.
There are two conditions for each individual thermostat that shall be tested for, the thermostat's settings are satisfied and the thermostat's temperature indicates it requires a heating or cooling unit to be turned on.
If this condition is true, then the module shall output a request to turn off both the heating unit and the cooling unit.
The THEMAS system shall control each of the heating and cooling units that are defined for the system.
The THEMAS system shall limit the number of heating or cooling units that may be running simultaneously.
The THEMAS system shall maintain the ON/OFF status of each heating and cooling unit.
When a request to turn on a heating or cooling unit is received, the system shall determine if the request can be honored.
If the maximum number of heating or cooling units is already running, the request will be added to a LIFO queue.
If the maximum number of heating or cooling units is not running, this process will generate a request to turn on the requested unit.
When a request to turn off a heating or cooling unit is received, this process shall check the queue of waiting heating and cooling requests.
If the queue is not empty, this process shall remove one request from the LIFO queue and check the current state of the thermostat for which the queued request was made.
If that thermostat still needs a heating or cooling unit turned on, this process shall submit a request to turn that unit on.
When a request for a heating unit or cooling to be turned isdenied, an event shall be generated and the THEMAS system shall record that event.
This system event shall consist of a description of the event type (a request denied event), a designation of the thermostat that made the request, and a designation of the heating or cooling unit that was not turned on.
When a request to turn on or off a heating or cooling unit is made, this process shall generate the appropriate request to carry out that request.
This request shall include the designation of the heating or cooling unit and a flag to indicate whether that unit is to be turned on or off.
This process shall recognize the values for the requested heating or cooling unit and the ON or OFF status that is being requested.
The necessary signal to the heating or cooling unit will be generated.
This procedure shall output the status information of the heating or cooling unit.
This process shall generate an event each time a change is made to the status of a heating or cooling unit.
This event shall contain the identification of the heating or cooling unit whose status is being changed.
When the THEMAS system detects a request for an alarm, this process shall detect which of the two alarms are being requested.
If the system detects an invalid temperature, this process shall output a continuous series of alternating 500 Hz and 700 Hz beeps on the supervisor's computer.
This series of beeps shall continue until the supervisor manually resets the alarm through the supervisor's interface window.
If the system detects a temperature limit has been exceeded, this process shall output a continuous series of alternating 1000 Hz and 1500 Hz beeps on the supervisor's computer.
Each time an alarm is requested, an alarm event shall be recorded.
This event shall be used to provide operational and statistical reports about the system.
When an event occurs, the THEMAS system shall identify the event type and format an appropriate event message.
The THEMAS system shall record each event by a description and the current system time for that event.
This information shall be recorded in a Microsoft Access database that shall reside on the supervisor's computer.
The supervisor's interface shall display the available thermostats and their individual current temperature settings.
The supervisor shall be able to select one of the thermostats and select a value for the current temperature from a list of valid temperatures.
The supervisor's interface to the THEMAS system shall provide a mechanism to select between an operational history report or a statistical summary report.
Either report shall consist of an ASCII file whose location and name shall be selectable by the operator.
If the operational history report is selected, the THEMAS system shall select all the events from the event database, sort the events by date and time, and create the ASCII report file.
If the statistical report is selected, the THEMAS system shall present the operator with a list of available months from which to make a selection.
After selecting one of the months, the system shall generate the ASCII report file.
The XS shall have the ability to redefine or reset names of connect descriptors to database server instances.
Connect descriptors are fully qualified object names and include address and instance name.
The data management services shall have the capability of being tuned by on-site personnel to adjust for varying workloads and sizes of associated databases.
At a minimum, the session time-out values shall be user-definable and be able to be reset prior to initialization of a user session.
Produce and display submittal forms as part of the Information Resource Submittal Package from the web containing the following Information Resource artifacts: XML Tag Specification, XML Spec, Sample of XML document of the tag to be submitted.
The package is to be compressed and emailed or sent via ftp to an addressee.
Submit metadata by an on-line interactive process.
Submit metadata by a off-line and interactive batch process.
Parse submitted XML Registry specification forms.
Populate XML Registry database.
Modify of specified terms and definitions of metadata and status of Information Resources.
Assemble registered information resources to form new components.
Assemble new DTDs from current.
Notify change in Information Resources or authorized producer of tag.
Provide a capability to post planned changes to a registry.
Approve and reject submissions.
Forward request to different registry.
View the XML Tags via a tree or hierarchy structure or tabular format.
View the XML Tags by giving the user multiple search options to find a specific Tag.
View the XML tags by giving the user the search option to find all tags of a given subscriber or author.
Each Information Resource will have its own web page to allow the user to view all pertinent information, according to its information resource type.
Display an XML Tag Specification form to the author of a given information resource.
Provide capabilities to download the XML Tags or other selected Information Resources.
Catalog entities and attributes within servers to enable browsing, searching, retrieving of data related to XML sources.
Establish rules to ensure maximum semantic understanding of a term as it appears in an XML document.
Create and manage usernames and superusers.
Create a naming structure within the COE architecture to express the context and relationship of the naming convention to other naming conventions.
Define a set of metadata tags, information attributed to metadata tags (meta-metadata) and other related terms for the maintenance and control of XML tags.
Review and approve submission.
The MultiMahjongServer will be designed to reside on a central computer (server) that is connected to a TCP/IP network and has a unique IP address.
The MultiMahjongServer will allow connections from MultiMahjongClients and communicate with them using IP.
The MultiMahjongServer will serve as a node for MultiMahjongClients.
That is, it will be able to relay data received from one MultiMahjongClient to other MultiMahjongClients that request it.
The MultiMahjongServer will automate the game initialisation functions (as opposed to the MultiMahjongClient doing them), such as randomising tile order, randomising seating position and storing the "Game Info" database.
The MultiMahjongServer will contain a High Scores list with the names and scores of the top MultiMahjong players.
The MultiMahjongServer will allow players on MultiMahjongClient programs to chat with each other in real time.
The MultiMahjongServer will allow players on MultiMahjongClient programs to modify their own names and icons during gameplay.
The MultiMahjongServer will support an architecture whereby all Computer Opponents (CO) required will reside on it instead of on the MultiMahjongClient programs.
The MultiMahjongServer will have a graphical user interface with which the administrator of the server can get log information and change game settings.
The MultiMahjongServer will be able to save preferences to a file and read from that file at start-up.
When the user begins the MultiMahjongClient program, they will be able to choose to create a new multi player game, to create a new single player game, to join an existing multi player game, or to quit the program.
These options will be available at any stage while the program is running as long as there is no game currently being played by the user.
When a user creates a new multi player game, they must enter their name.
When a user creates a new multi player game, they must choose an icon from a predetermined list.
When a user creates a new multi player game, they must decide the number of human and computer opponents they want.
As any game of Mahjong requires 4 players, the MultiMahjongClient will limit the user to choosing 4 players in total.
When a user creates a new multi player game, they must set the score limit for winning a hand of Mahjong.
When all the necessary human players have joined the game, the user may choose to begin the game.
The MultiMahjongClient must send this game initialisation information to the MultiMahjongServer so that the MultiMahjongServer can create a new game.
The processing for any Computer Opponents (CO) will be done by the MultiMahjongClient program.
In a single player game, the MultiMahjongClient will need to process for 3 COs.
In a multi player game with 2 human players, each MultiMahjongClient will support 1 CO.
In a multi player game with 3 human players, only 1 of the 3 MultiMahjongClients will support a CO.
Obviously, in a multi player game with 4 human players, no CO is required.
When a user creates a new single player game, they must enter their name.
When a user creates a new single player game, they must choose an icon from a predetermined list.
When a user creates a new single player game, they must set the score limit for winning a hand of Mahjong.
When a user selects the option to join an existing game, the MultiMahjongClient will retrieve a list of any games that still require players from the MultiMahjongServer.
When a user wishes to join a multi player game, they must enter their name.
When a user wishes to join a multi player game, they must choose an icon from a predetermined list.
When a user wishes to join a multi player game, they must choose which of the available games they wish to join.
The MultiMahjongClient must send this join information to the MultiMahjongServer.
In a multi player game, each MultiMahjongClient must retrieve from the MultiMahjongServer whether it must support a CO, the score limit for a hand, all players' names, icons and seating positions, and the tiles of the human and CO players supported on the MultiMahjongClient.
The list of un-started games that the MultiMahjongClient fetches from the MultiMahjongServer will be displayed in such a way that users can see relevant information about each game.
The MultiMahjongClient will save the user preferences in a file and read them in when the program begins.
Users who create a new game will be able to change the ability level of any CO involved in the game.
There will be 3 levels available: Beginner, Intermediate and Advanced.
Users who create a new game will be able to choose to play different variations of Mahjong rules, including the Cleared Hand variation and the Japanese variation.
Any user who creates or joins a game will be able to upload their own JPEG or GIF image that they wish to have displayed above their name, if they do not wish to use a preset icon.
The MultiMahjongClient must only allow players to make moves according to the Chinese rules of Mahjong as described in the rulebook.
The MultiMahjongClient will inform the user whose turn it is to pick up a tile.
The MultiMahjongClient will retrieve other players' changes in the game situation from the MultiMahjongServer.
The user's screen is then updated to display these changes.
If the configurations of the current discard, the tiles in a user's hand, and the player whose turn it is, would allow the user to Chow, Pung, Kong, or Mahjong under the Chinese rules of Mahjong, the MultiMahjongClient will inform the user that they can do so.
If they choose to take this action, then the MultiMahjongClient must send this information to the MultiMahjongServer.
Users will be able to pick up a tile from the wall if it is their turn.
If they choose to pick up, the MultiMahjongClient must send this information to the MultiMahjongServer.
Users will be able to discard a tile if they have picked one up.
If they choose to discard, the MultiMahjongClient must send this information to the MultiMahjongServer.
The MultiMahjongClient must inform the user if another player is fishing.
The MultiMahjongClient must inform the user if another player goes Mahjong.
The wind of the round is also updated, if required.
The MultiMahjongClient must inform the user if the hand has ended in a draw.
The MultiMahjongClient will keep the user's tiles in order.
The MultiMahjongClient will play sound effects associated with certain game actions.
Users will be able to turn the sound on or off at any stage during the game.
Users will have access to the User's Documentation online at any stage during the game.
Users will be able to view the High Scores list that is located on the MultiMahjongServer.
The MultiMahjongClient will automate the picking up of a tile from the wall if the user has no other option.
Users will be able to undo their last move if playing in single player mode.
Users will be able to save their game if playing in single player mode.
Users will be able to chat with each other in real time.
Users will be able to change their icons, pictures and names during the game.
The game will end when all 4 rounds have been played or if the user chooses to end the game.
The user will be able to end the game at any stage of the game.
The user will then be able to quit the program or begin or join a new game.
The MultiMahjongServer will inform all MultiMahjongClients connected to the game that the game has ended.
Users of any MultiMahjongClient previously connected to the game will have the choice to quit the program or to begin or join a new game.
If a user leaves the game prematurely, a new CO is created on another user's machine to fill their place.
This CO will take over the user's current position and circumstance within the game.
The CO must play moves according to the Chinese rules of Mahjong.
The CO will not have access to the data containing the faces of any tiles in the wall or any concealed tiles in any other players' hands.
The CO will have access to the number of tiles in the wall or in a player's hand.
The CO will be able to read any player's exposed or revealed hands.
The CO will be able to pick up tiles off the wall, discard tiles, reveal Kongs, Chow, Pung, and Mahjong.
The CO will be able to determine what tiles have not been played according to the tiles that have already been discarded, exposed or revealed.
The CO will be able to recognise almost finished sets of tiles and will not discard tiles in such sets.
The CO will be able to perform look-ahead algorithms to determine its best move in the Intermediate and Advanced levels.
The CO will be able to perform calculations at any stage of the game.
The CO will be able to play any version of the rules that are specified by the user who creates the game.
There will be COs of different playing styles that the user can choose from.
If a nonfatal error occurs, a dialogue box reporting the nature of error will be displayed.
An option to access the online troubleshooting guide is included in the error dialogue box.
If a fatal error occurs, a dialogue box reporting the nature of error will be displayed.
The MultiMahjongClient will have sound effects associated with the game actions.
The MultiMahjongClient will have animation also associated with game actions.
The states of operation of the TCS shall include Startup, Operation, and Shutdown.
The TCS states shall not exist concurrently.
Upon application of power the TCS shall enter the Startup State.
The Startup State shall be comprised of the Normal Startup Mode and Recovery Startup Mode.
The TCS will execute the particular startup mode which corresponds with the manner in which the TCS Software was halted.
When the TCS Software is terminated normally, the TCS shall enter the Normal Startup Mode of operation upon application of power.
When the TCS software is halted due to an unplanned power interruption as well as abnormal program termination, then the TCS shall enter the Recovery Startup Mode upon application of power.
During startup, the TCS shall determine which of the 5 levels of interaction are achievable by the TCS configuration.
Levels of interaction higher than those achievable by a particular TCS configuration shall be prohibited.
The TCS shall inform the operator if the operator attempts to execute a function prohibited as a result of the determined level of interaction.
The TCS shall be capable of automatically recording system state data, interface communications and other information necessary to support event reconstruction.
For recovery from abnormal termination, TCS shall prompt the operator to select the type of recovery to be executed.
When in the Operations State the TCS shall be capable of operating in three modes: normal operations mode, training operations mode, and maintenance operations mode.
The Operations State modes shall not exist concurrently.
The operator shall have the capability to command the system to the Shutdown State from all modes under the Operations State.
Functions under the Normal Operations Mode shall operate concurrently without precluding or excluding any of the other functions, in accordance with allowable operations as determined by the appropriate levels of interaction.
Upon the selection of a shutdown command the TCS shall enter the Shutdown State.
Shutdown of the TCS shall include storage as well as deletion, as specified by the operator, of mission data files, shutdown of appropriate functions, shutdown of HCIs, and proper termination of all active interfaces.
There shall be no modes of operation in the shutdown state.
The TCS shall have the functionality to allow the operator to generate a UAV mission plan.
The TCS shall have the functionality to receive and process UAV mission plans from service specific mission planning systems.
The TCS Mission plan shall include all necessary information required to be interoperable with the service specific mission planning systems.
The TCS shall have the functionality to transmit UAV mission plans to service specific mission planning systems.
The TCS shall facilitate automated processing of mission plan data received via C4I interfaces in order to extract the appropriate mission planning data.
The TCS shall have the functionality to receive and process UAV mission plans from other TCSs.
The TCS shall have the functionality to transmit UAV mission plans to other TCSs.
A Mission Plan shall include a Flight Route Plan for a selected AV, a Payload Plan for the selected payload, and a Communications Plan.
The TCS mission planning function shall provide a graphical user interface that gives the operator the ability to define waypoints on a map-based display using a pointing device with full keyset redundancy.
The TCS shall provide the capability to compute the range and bearing between two geographic positions on the map display.
The TCS shall have the capability to import as well as create and modify map display overlays for fire support coordination measures, airspace control measures, and threat identification measures.
Upon completion of radar cross section analysis and characterization by the Government for each UAV type, TCS shall utilize a UAV signature versus threat lookup table that identifies the lethality of the threat to the UAV, and shall provide the capability of displaying aircraft signature versus threat, before and during flight.
The TCS shall permit dynamic mission and payload retasking during all phases of operational mission execution.
The TCS shall allow the operator to enter as well as review mission plan parameters, including AV flight parameters, payload control parameters, data link control parameters, AV VCR control parameters, and AV loiter patterns.
The TCS shall provide the capability to enter system configuration characteristics in the mission plan.
TCS shall provide the capability for the operator to retrieve a mission plan for viewing, modification, as well as deletion at the operator's discretion, and allow the operator to save the mission plan under a different name, for future retrieval.
The TCS shall automatically check the validity of the intended mission plan prior to being uploaded.
The TCS shall notify the operator of all discrepancies found during the mission plan check as well as indicate successful completion of the mission plan check.
The TCS shall provide the capability to override validation faults after the fault is acknowledged by the operator.
The TCS shall allow the operator to set the LOL delay timers during mission planning.
The TCS shall provide the capability to print waypoint data in alphanumeric format.
The Flight Route Plan, as a minimum, shall include AV flight path information, Loss of Link plan, AV VCR control tasking, and data link control information.
The TCS shall allow the operator to define the desired AV route in waypoint format, and shall provide the capability to include up to 500 waypoints in each flight route plan.
The TCS shall provide the capability to display mission waypoints and flight path graphically.
The TCS shall provide the capability to enter waypoint data in alphanumeric format.
The TCS shall present to the operator the estimated time of arrival and fuel status at each programmed waypoint of the proposed mission plan.
At every waypoint and every 5 minutes, the TCS shall compute the AV's flight range based on remaining fuel.
The TCS shall analyze the flight route plan selected for uplink to determine that the flight constraints of the AV and the limitation of the data link are not violated prior to transmission of the flight route plan to the AV.
The flight route plan, as a minimum, shall provide the necessary AV commands to autonomously execute a programmed flight and return to a designated recovery area.
The TCS shall provide the operator with an interactive graphics and map based flight route planning capability.
The TCS shall provide the capability to create waypoints that define the desired flight path, define AV Altitude and Airspeed associated with the waypoint.
A de-clutter capability shall be provided that allows the operator to display only a selected number of the most significant threats.
The TCS shall provide the capability to modify the maximum number of threats displayed, when de-clutter is selected.
The TCS shall provide the capability to display waypoint data in alphanumeric format.
The TCS shall have the capability to load a map onto the display, to zoom in and out, to scroll, to print, and to clear a map on the map display.
The TCS shall provide the operator with a clearly indicated map scale.
Upon operator request, display an icon indicating AV position when receiving downlink from the desired AV.
Upon operator request, display an icon indicating payload center field of view and footprint when receiving downlink from the desired AV.
Upon operator request, display an icon, in variable sizes, indicating target position and type at coordinates selected by the operator.
Upon operator request, display icons indicating TCS position and Ground Data Terminal position.
Upon operator request, display an icon indicating Launch, Handover, and Recovery site.
Upon operator request, display icons indicating Flight Plan waypoints.
The TCS shall provide the capability to graphically display Line of Sight versus terrain profile.
The TCS shall be able to generate payload planning information to be uplinked to the AV separate from a flight route plan.
The TCS shall provide the system functionality necessary to generate a payload plan.
The TCS shall provide the capability to display the payload swath for the selected payload for planning purposes.
The TCS will have the capability to control and monitor an AV, payload, data link, and C4I interfaces during the execution of a mission.
While flying two MAE AVs Beyond Line Of Sight, the TCS shall provide full control functionality of each AV.
AV specific components used to perform ground based closed loop command and control functions for TCS shall be initialized upon operator selection of a specific AV.
TCS shall be initialized upon operator selection of a specific AV.
The TCS shall transmit command and control information to the AV via the uplink to the AV, and receive AV telemetry and payload information via downlink from the AV.
The TCS shall be capable of being interoperable with Predator and Outrider UAVs across the 5 levels of UAV interaction.
The TCS shall have the capability to control and monitor multiple types of AVs.
TCS shall notify the operator when AV performance parameters are out of limits.
The TCS shall provide the capability to pass control of an AV to another TCS, and receive control of an AV from another TCS.
The TCS shall provide the capability to control the AV flight commands as well as to release the AV to an autonomous flight control mode.
AV telemetry data shall be available to support other TCS functions as required.
The TCS shall provide the capability to control the flight of the selected AV in accordance with the specific AV's operational performance capabilities.
The TCS shall provide the capability to fully control and display the AV's Identification Friend or Foe.
The TCS shall provide the capability to enter AV preset limits which, as a minimum, will include airspeed limits, altitude limits, and fuel limits.
The TCS shall allow the operator to control an AV using the LOS as well as SATCOM data links.
The TCS shall support operation of the AV via all flight modes, to include manual controls.
The TCS shall provide the capability to implement an emergency action plan, if supported by the AV, to control the AV during equipment failures.
The TCS shall provide interactive displays necessary to command the flight of an AV.
The TCS shall allow the operator to command the flight behavior characteristics inherent to the selected AV.
The operator shall have the capability to initiate as well as change, to include as a minimum manual override, flight behaviors by sending the proper control commands to the UAV.
The TCS shall have the capability to command the AV to use the navigation methods inherent to the selected AV.
The operator shall have the capability to initiate as well as change, to include as a minimum manual override, UAV navigation methods by sending the proper control commands to the UAV.
The TCS shall provide the functionality to control, monitor, and display the operation of the Air Data Terminal.
The TCS shall provide the functionality to control the ADT antenna.
This control will include its pointing direction and mode of transmission.
The TCS shall provide the functionality to control the power, transmitter signal strength, and frequencies used by ADT for data link communication.
As an objective, the TCS shall support an automatic launch and recovery system.
As an objective, the TCS shall be interoperable with the Integrity Beacon Landing System, and the Common Automated Recovery System, both used by Outrider.
As an objective, the TCS shall present sufficient cues to the operator to implement and monitor automatic launch and recovery, and to initiate abort procedures if required.
The TCS shall allow the operator to initiate the emergency recovery feature of the AV, if the AV has an emergency recovery feature.
TCS shall provide the capability to monitor specific telemetry elements real-time, and record all telemetry elements for future review and processing.
TCS shall provide the capability to monitor AV adherence to the uplinked mission plan, detecting any deviations greater than 10% from projected flight path, and notifying the operator if deviations are detected.
TCS shall provide the capability to monitor the status of all AV subsystems reporting status.
The TCS shall display the AV status, to include but not be limited to the AV location and flight and avionics system status.
When the data link is interrupted, the TCS shall present the last known AV status values and the time at which the last values were reported.
The TCS shall be capable of displaying fuel parameters to the operator to include as a minimum, remaining fuel, flow rate, and bingo fuel.
The TCS shall compute the estimated position of the AV during Loss of Link based upon the last known AV position and anticipated flight path based on current flight mode.
TCS shall display a LOL timer to the operator initiating a LOL onset.
The TCS shall be capable of being interoperable with the installed payloads across the 5 levels of UAV interaction.
The TCS will have the capability to control and monitor the AV payloads.
The TCS shall have the capability to receive data from and control payloads on an AV that is being controlled from another TCS.
The TCS shall receive, process, and present payload data to the operator so that the status of the payload can be determined.
The TCS shall permit the operator to control the payload using all methods supported by the payload installed in the selected AV.
The TCS shall provide a graphical user interface display for the purpose of controlling the payload.
The TCS shall provide override of payload automated as well as pre-programmed inputs.
TCS shall provide the capability to monitor payload adherence to the uplinked mission plan.
The TCS shall display the current search footprint and the search history of the payload on the map.
The TCS shall have the capability to simultaneously control and monitor a line-of-sight as well as a BLOS data terminal.
The TCS shall be capable of interfacing with the specified data terminal and issuing data link terminal commands required to establish, control, and maintain the data link with a selected AV.
The TCS shall be capable of automatically selecting the proper mode of operation for the selected data terminal.
As a minimum the TCS LOS data terminal control modes shall include acquisition, auto-track, search, manual point, omni directional, as well as directional modes of operation, if applicable to the selected data link.
The operator shall be able to manually override any automatic data terminal control mode selection if desired, except during Emission Control and Hazards of Electromagnetic Radiation to Ordnance conditions.
The TCS shall support a LOS data link and SATCOM data link capability.
For shipboard operations, the TCS shall provide the capability to switch to a second LOS antenna, if a second antenna is available, when desired.
The TCS shall provide the capability to switch to a Satellite Communication antenna, if the selected AV has SATCOM capability, when desired.
The TCS shall provide an interactive display for the purpose of controlling the data link terminal.
The TCS shall provide automatic pointing commands for directional antennas, and shall allow for the manual pointing of directional antennas when desired by the operator.
The TCS shall be capable of positioning antennas to maintain LOS as well as SATCOM.
The TCS shall incorporate antenna pedestal 3-axis stabilization to compensate for platform motion, if applicable.
The TCS shall be capable of automatically controlling the transmitter and receiver functions of the selected data terminal.
The operator shall be able to manually override the automatic function selection of the selected data terminal, if desired.
The TCS shall be capable of automatically controlling the transmitter and receiver modes of the selected data terminal.
The operator shall be able to manually override the automatic mode selection of the selected data terminal, if desired.
The TCS shall be capable of automatically controlling the transmitter and receiver frequencies of the selected data terminal.
The operator shall be able to manually override the automatic frequency selection, if desired.
The TCS shall receive, process, and present status data to the operator so that the status of the data terminal and the supported AV data link can be monitored.
The TCS shall be capable of monitoring and displaying the signal strength of the received and transmitted signals for the selected data terminal.
The TCS shall be capable of monitoring and displaying the signal quality of the received and transmitted signals for the selected data terminal.
The TCS shall be capable of presenting to the operator a visual depiction of the minimum and maximum data link operational ranges.
The TCS shall have the functionality to process payload product data from Electro Optical, Infrared, and Synthetic Aperture Radar payloads.
The NITF 2.0 imagery files generated by the TCS shall contain the necessary telemetry and support data to permit subsequent imagery exploitation by C4I systems.
The TCS shall have a built-in text entry capability including the ability to annotate textual information on imagery.
The TCS shall be capable of receiving secondary HAE UAV payload imagery.
Payload telemetry data shall be available to support other TCS functions as required.
The TCS shall display live and recorded imagery data, with as well as without annotation and overlay, upon operator request.
The TCS shall provide the capability to simultaneously view imagery as well as data from more than one payload, when applicable.
The TCS operator shall be able to select the content of the overlay information.
The TCS shall have the capability to select and deselect several types of cross hairs (or other similar icon) to identify a selected point on a target.
The image enhancement capability shall include contrast, brightness, edge enhancement, and sharpness.
The TCS shall have the capability to display Near-Real Time imagery to include, as a minimum, date and time group, target location coordinates when the target is in the center of the field of view, north seeking arrow, and AV position and heading.
The TCS shall provide the capability to compute the range and bearing between two geographic positions located on the payload imagery display.
The TCS will have the functionality to determine target coordinates, and estimate target coordinate accuracy.
The TCS shall support a target location function where the operator can request the current ground location of the payload field-of-view center.
The TCS shall have the functionality to determine the location of items of interest within the payload field-of-view, and express these locations in coordinates acceptable for military applications.
The TCS shall have the functionality to develop an estimate of the error in computed target coordinate and associate the error estimate with the appropriate target.
The TCS shall provide the functionality necessary to interface with various C4I systems in order to satisfy the operational requirements for tasking TCS to plan and conduct a mission.
The TCS shall provide the functionality necessary to interface with various C4I systems in order to satisfy the operational requirements for presentation of payload product and target coordinates for export and dissemination.
The TCS shall provide the functionality necessary to interface with various C4I systems in order to satisfy the operational requirements for use of UAV obtained data to provide a C4I system with information that may be used by C4I system operators for transmission on tactical data communication links.
The TCS shall have the capability to interoperate with a data server to receive, extract, and push intelligence data.
The TCS shall have the capability to use cable to deliver live video imagery in multiple locations.
The TCS shall have the ability to interface with Service specific ground and airborne Ultra High Frequency, Very High Frequency, and High Frequency radios for digital message transmission while using the same radios for record traffic.
Where applicable, TCS data burst messages shall comply with Variable Message Formats.
The TCS will have the capability to manage all operational C4I interfaces across all 5 levels of interaction.
The TCS shall have the functionality to send and receive tactical communication messages.
The TCS shall have the functionality to send and receive annotated and un-annotated digital imagery.
The TCS shall have the functionality to establish digital communication and when completed terminate communications to the C4I systems.
The TCS shall have the functionality to establish and when completed terminate digital communication to peripheral devices.
The TCS shall have the functionality to send and receive analog imagery in RS-170A format with as well as without overlay.
The TCS shall have the functionality to establish and when completed terminate analog communication to C4I systems.
The TCS shall have the functionality to establish and when completed terminate analog communication to peripheral devices.
The TCS will have the functionality to process received C4I messages and to prepare C4I messages for transmission.
The TCS shall have the functionality to review incoming tactical communication messages.
The TCS shall have the functionality to prepare annotated as well as un-annotated digital imagery for transmission.
The TCS shall have the functionality to review incoming annotated as well as un-annotated digital imagery.
All digital messages received by the TCS shall be automatically checked for errors and corrected when possible.
All erroneous messages that cannot be corrected by TCS shall be flagged to the operator.
The TCS shall provide the capability to log all incoming and outgoing formatted tactical messages.
The TCS shall have the functionality to prepare annotated as well as un-annotated analog imagery for transmission.
The TCS shall have the functionality to receive incoming annotated as well as un-annotated analog imagery.
The TCS shall have the functionality to monitor the status of all C4I interfaces, and display appropriate control information.
The TCS shall have the functionality to display which C4I systems are supported and online during a mission.
The TCS shall have the functionality to monitor the status of all incoming and outgoing tactical communication messages.
The TCS shall have the functionality to review all tactical communication messages received and transmitted.
The TCS shall have the functionality to view incoming and outgoing, annotated as well as un-annotated analog imagery.
The TCS shall have the functionality to view incoming and outgoing, annotated as well as un-annotated digital imagery messages.
TCS shall be capable of executing AV maintenance software and displaying appropriate status results.
TCS shall be capable of executing payload maintenance software and displaying appropriate status results.
TCS shall be capable of executing data terminal maintenance software and displaying appropriate status results.
TCS shall be capable of executing workstation and peripheral equipment maintenance software and displaying appropriate status results.
The TCS shall allow the operator to control and monitor the AV's FD/L, if required and provided by the Original Equipment Manufacturer.
The TCS shall restrict operator access to this capability via password protection.
The TCS shall provide the capability for Authorized Operators to modify all TCS programmable parameters.
The TCS shall be capable of importing map information via operator procedure and shall be capable of incorporating vector format and Compressed ADRG maps.
The TCS shall allow an Authorized Operator to execute a software debug capability and view the resulting debug diagnostic information.
The TCS will interface with external systems to conduct mission coordination and operations.
The TCS shall provide the capability to interface with equipment necessary to provide connectivity with standard DoD tactical radios, Mobile Subscriber Equipment, and military and commercial satellite communications equipment.
The TCS shall interface with external mission tasking systems.
The TCS shall provide the system functionality necessary to interface with the data terminal.
The TCS shall provide the system functionality to allow interfacing with external systems via a local area network.
The TCS shall provide external interfaces to launch and recovery systems.
The TCS shall provide an interface between the TCS and an external hard copy printer.
The TCS shall provide an interface between the TCS and external data storage systems.
The TCS shall implement an AV Standard Interface that will provide the proper data format to ensure communications with the selected AV.
This interface shall allow the information from the data server to be made available to other components of the TCS.
Remotely hosted applications shall communicate in a client server relationship via the defined data server interface.
The TCS shall provide an internal interface for the SAR Processor in order to disseminate SAR information (to include imagery and telemetry) to other components of the TCS.
The TCS shall incorporate an intercom system that provides verbal communication in the situation where there are multiple operators.
The intercom system shall be compatible with service specific voice communication systems.
The TCS will provide an interface between the TCS and a video cassette recorder.
The TCS shall be able to route VCR recorded payload video to the C4I interfaces.
An RS-170A video interface shall be provided for the system to output and input analog imagery and overlays to and from a Video Cassette Recorder for recording and playback.
The TCS shall have ports for outputting data and imagery to an internal hard copy printer.
The TCS shall, as a minimum, allow the Operators to print freeze-frame video, C4I Messages, Mission Plans, FD/L information, and current map display to an internal printer.
The TCS shall be able to access data storage devices.
The TCS shall have the functionality to transfer digital data as well as digital imagery to and from data storage devices.
The TCS shall provide sufficient cues to allow the operator to safely take-off, land and navigate under Instrument Flight Rules.
The TCS shall provide adequate capability to allow the operator to operate each UAV within its certified operational flight envelope.
Appropriate cautions and warnings shall be provided to the operator if the air vehicle deviates into unsafe flight regime.
For mission planning, the TCS shall provide terrain avoidance warning and minimum reception altitude calculations for line of sight flights.
During mission execution, the TCS shall provide the operator with cautions and warnings if the UAV system has identified a malfunction.
System Initialization is entered when the system is powered up for the first time, or when a power-on reset exception is received by the software.
The system transfers to the Normal Operation state after the FCP has been configured into a fault-tolerant computer and enables the timer interrupt.
The system will transfer to the System Initialization state if a reset exception is received.
The system will transfer to the Fault Recovery state if a fault is detected.
As part of System Initialization , the Boot ROM shall be configured to, after completing IBIT, call the manufacturer-supplied VxWorks Board Support Package initialization software followed by a call to the FTSS System Initialization software.
System Initialization shall initiate the watchdog timer.
System Initialization shall enable and reset the processor's watchdog timer such that, in the absence of a fault, the watchdog timer does not expire and reset the processor.
System Initialization shall configure the FCP virtual group to use all available synchronized processors, if at least 3 of the 5 FCRs are active.
If any of the FCP processors are not synchronized, System Initialization in the surviving triplex shall attempt to sync with the failed FCP.
If the failed FCP processor has not synced in 2.5 seconds after the surviving triplex has detected the loss of the FCP, then the surviving triplex shall, within 1 second, send a single voted VMEbus reset through the NE to the failed FCP.
System Initialization shall align processor state and congruent aligned memory locations.
The FCP shall configure ICP simplex virtual groups for each channel in the FCP virtual group.
The FCP shall wait up to 15 seconds, after configuring the ICP virtual groups, for communication to start from the ICP.
System Initialization shall call an application initialization function to allow the application to (at least) create tasks, create communication sockets, initialize the vehicle mode, and initialize memory alignment allowance.
The FCP shall, after application initialization is complete, send an FCP Ready Sync message to the ICP.
The FCP shall wait up to 2.5 seconds (from the sending of the FCP Ready Sync) for the ICP Ready signal.
FTSS will wait until the normal ICP presence test fails.
The FCP shall, if the NEFU ICP fails to send its ICP Ready signal, mask out that ICP, but continue to use the NE.
System Initialization shall, when all other activities are completed, start the 50 Hz timer and enable the timer interrupt.
The scheduler shall provide an API call to install a task into a rate group.
The API call is invoked during system initialization.
The scheduler shall support up to 20 tasks per rate group.
The scheduler shall provide an API call to install a rate group into a vehicle mode at system initialization.
The scheduler shall support up to 3 rate groups per vehicle mode.
The scheduler shall support up to 5 vehicle modes.
The FTSS software shall provide the identical services in all vehicle modes.
The scheduler shall provide an API call for an FCP application task to alert the scheduler of a vehicle mode change.
The scheduler shall process vehicle mode changes during minor frame 49.
The scheduler shall execute cyclic tasks, providing an API call to allow the application to block until its next iteration.
The scheduler shall execute as the highest priority FTSS or application task in the system.
The scheduler shall keep a minor frame count from 0 to 49.
The scheduler shall give tasks priority values according to their rate.
The scheduler shall detect 50 Hz, 10 Hz and 1 Hz rate group over-runs.
The scheduler shall report rate group over-runs to the application via an API service for incorporation in the telemetry data stream.
The scheduler shall provide an API call to specify which task was running within the rate group which over-ran.
The scheduler shall provide a mechanism to inform a task when it did not complete during the previous frame and restart it at the beginning of the task.
The scheduler shall set the 50 Hz interval timer to a count down value so as to cause the next minor frame interrupt at 20 msec from the previous interrupt congruently in all operational FCPs.
The scheduler shall issue a 50 Hz interrupt to the ICPs by means of a VMEbus IRQ5 interrupt.
The scheduler shall issue the 50 Hz interrupt to all the ICPs with a skew no greater than 330 microseconds.
The scheduler shall send the minor frame number, vehicle mode, mission elapsed time, and separation elapsed time to the ICP prior to the 50 Hz interrupt.
The FTSS software shall provide an API call that provides the application program the minor frame number.
The scheduler shall provide a method to schedule tasks at a set rate and in a set order within the rate group.
The scheduler shall execute all the tasks in each of the rate groups that have been installed in the current mode.
The scheduler shall rely on the order used in adding tasks to a rate group to determine the task priorities.
The scheduler shall provide a method for a task to be scheduled as a 50 Hz helper task for source congruency input exchanges and voted output exchanges that starts in a particular minor frame but runs only during every 5th or 50th minor frame, effectively running at a lower, sub-rate, 10 Hz or 1 Hz, respectively.
The scheduler shall provide a task deadline capability that allows the application to specify which minor frame a task should start in and finish in.
All tasks in rate groups and their corresponding schedules for all vehicle modes will be set up at system initialization.
Tasks in a rate group must suspend on a scheduler API call at the top of their execution loop.
Upon the occurrence of an exception of either kind, the FCP shall make the error type available to the application via an API service.
The scheduler shall provide a mechanism for a task optionally to define a user written software-exception-handling routine that runs in the context of the task.
For hardware exceptions and reserved exceptions, the FTSS shall make the error type and its context data available to the application, then return from the exception handler to the task that was running when the exception occurred.
For software exceptions occurring within the FTSS, the FTSS shall make the error type and its context data available to the application, then restart the offending task at its beginning.
For other software exceptions, the scheduler shall, after making available the error type and context data to the application, resume processing at the initialization point of the offending task.
For software exceptions occurring during Startup, FTSS shall issue a VME reset to the FCR in which the exception occurred.
Communication services shall provide synchronous message passing services in the form of message queues.
Communication services shall provide immediate message passing services in the form of pipes.
Communication services shall provide the capability to "broadcast" messages to all virtual groups.
Communication services shall restrict the use of immediate message passing services between virtual groups to tasks running in the highest rate group on the FCP.
This restriction does noz apply to the ICPs since they are running as simplex VGs.
Communication services shall detect message passing between application tasks living on the same virtual group and bypass the usage of the network element.
Communication services shall route messages to the proper virtual groups and socket.
Communication services shall deliver messages in the same order at each member of a virtual group.
Communication services shall perform synchronous message passing at rate group frame boundaries.
Synchronous message passing sockets shall queue outgoing messages until they are transmitted at frame boundaries.
If there is insufficient space to enqueue a message for transmission, Communication services shall return an error to the corresponding task.
Communication services shall provide a message queue communication mechanism that guarantees message delivery between a sending and receiving task.
Communication services shall provide an API for message queue communication.
Communication services shall provide a notification of invalid or out of range application specified parameters on all operations.
Communication services shall provide a notification of an attempt to create a broadcast message queue.
Communication services shall provide error handling for message queue open of end point by non-assigned virtual group.
Communication services shall provide error handling for message queue is full when performing a send operation.
Communication services shall provide error handling for connection or transmission error.
Communication services shall provide error handling for FTSS unable to create ot open message queue.
Communication services shall provide a notification that a received message was truncated to the buffer size provided.
Communication services shall only allow a single task living on each specified virtual group to open the respective end of the queue.
Communication services shall provide a pipe communication mechanism allowing immediate message passing through the network and allowing a 50hz FCP transfer task to poll until it can read an immediate message from the ICP.
Communication services shall provide an API for pipe communication.
Communication services shall provide the capability to create pipes which broadcast their messages to all virtual groups.
Communication services shall provide a notification of an attempt to create a broadcast pipe with an ICP as the sending virtual group.
Communication services shall provide error handling for pipe open of end point by non-assigned virtual group.
Communication services shall provide a notification upon receiving a message that the previous message was overwritten.
Communication services shall provide error handling for FTSS unable to create or open pipe.
If the broadcast option is used, each virtual group should open the pipe and read from it to avoid flow control problems.
Communication services shall only allow a single task living on each specified virtual group to open the respective end of the pipe.
In the case of a broadcast pipe, communication services allows one task in each virtual group of the system to open the receiving end of the pipe.
The FTSS software shall configure the FCP to act as the Radstone IBIT master, with the exception that the ICP on the NEFU is the master.
The FTSS shall configure each FCP to perform IBIT Minimum Processing Environment Tests, Power-up Tests, and Initial BIT on each FCP.
The FTSS shall configure each FCP to halt processing if any of the MPE tests fail.
The FTSS shall configure each FCP to continue processing if any of the Power-up or Initial BIT tests fail.
The FTSS shall configure each ICP to perform IBIT Minimum Processing Environment Tests, Power-up Tests, and Initial BIT on each ICP.
The FTSS shall configure each ICP to halt processing if any of the MPE tests fail.
The FTSS shall configure each ICP to continue processing if any of the Power-up or Initial BIT tests fail.
The FTSS shall configure each ICP/PMC1553 to perform IBIT MPE Tests and Initial BIT.
The FTSS shall configure each ICP/PMC1553 to halt processing if any of the MPE tests fail.
The FTSS shall configure each ICP/PMC1553 to continue processing if any of the Initial BIT tests fail.
The FTSS shall configure each MPCC to perform MPE Tests.
Each MPCC is configured to halt processing if any of the MPE tests fails.
When the IBIT is complete, the FTSS in the channels that are part of the fault masking group shall report the results of IBIT for all Radstone boards to the application software for telemetry.
In IBIT failure cases that cause processing to halt, the failure shall be handled.
FTSS shall, in ICP and FCP IBIT failure cases that allow processing to continue, after saving the results of IBIT for reporting to the application, in the first minor frame after Startup or recovery, consider the FCR to be failed, and start performing recovery actions for the FCR.
Continuous BIT shall execute on the FCP virtual group.
Continuous BIT shall reset the processor's built-in watchdog timer at 50 Hz.
Continuous BIT shall exercise the presence test at 50 Hz to ensure that all processors in the FCP virtual group are synchronized.
The presence test shall also ascertain that all processors are executing the same 50 Hz, 10 Hz and 1 Hz frames.
Continuous BIT shall detect a failed ICP processor by detecting the absence of a periodic message for 2 consecutive minor cycles.
Continuous BIT shall report all diagnosed failures and recovery actions to the application for incorporation in the telemetry stream.
RAM scrub shall actively trigger the EDAC function by cyclically reading (and writing back if an error is found) all used RAM.
RAM scrub shall report detected errors to the application, congruently on all channels, via an API service for inclusion in the telemetry stream.
RAM scrub shall not scrub the area used for telemetry data.
Redundancy Management shall provide an API call to enable the application to retrieve the health status of the processors, network elements, network element links, MPCCs, and ICP controlled interfaces.
Redundancy Management shall provide an API call to enable the application to request that the FTSS RM software initiate a voted reset of a channel.
Redundancy Management shall be able to accommodate power up of all 5 channels and maintain all 5 NEs active, assuming no failures.
Redundancy Management shall define an initial mapping of physical hardware to virtual group identifiers consisting of 1 quadruplex FCP virtual group and 5 ICP simplexes.
If an FCR is diagnosed as faulty during Startup, Redundancy Management shall exclude the FCP in the faulty channel from the initial FCP virtual group configuration.
Redundancy Management shall implement degradation of the FCP virtual group to reconfigure hardware resources.
Redundancy Management shall implement reintegration of an FCP processor into the FCP virtual group, to reconfigure hardware resources.
Redundancy Management shall implement reintegration of a Network Element to reconfigure hardware resources.
Redundancy Management shall implement masking of a Network Element to reconfigure hardware resources.
When the FCP virtual group is configured as a quadruplex and a failed FCR other than the NEFU has been diagnosed, Redundancy Management shall degrade the FCP virtual group to triplex, removing the FCR.
The NE and the processors on the failed FCR will be removed from the NEs' Configuration Table and recovery of that channel will then take place, if alignment is permitted.
When the FCP virtual group is configured as a triplex, and if the NEFU is still active, and a failed FCR other than the NEFU has been diagnosed, Redundancy Management shall degrade the FCP virtual group to degraded triplex, removing the FCR.
If the FCP is configured as a triplex, and if the NEFU is not still active, and another failure in the FCP FCR is diagnosed, Redundancy Management shall mask out the processors on the failed FCR.
If a failure in an FCR other than the NEFU is diagnosed when the FCP is configured as a degraded triplex, no action shall be taken.
For the NEFU, if the first failure is diagnosed, Redundancy Management shall issue a configuration update to mask out the failed processor.
For the NEFU, if errors are identified after the processor has been masked out, and if at least 4 NEs are still active, the NE shall be removed from the configuration and recovery will be attempted.
If the configuration needs to be changed due to a fault, Redundancy Management shall issue a configuration update to mask out the failed network element.
Redundancy Management shall issue a voted reset to the failed channel, if alignment is permitted.
Redundancy Management shall initiate transient NE recovery to restore Byzantine-resilient communications, if alignment is permitted.
Redundancy Management shall reintegrate a failed FCP processor with the FCP virtual group when alignment is permitted and when the processor failure is not permanent.
Redundancy Management shall, within 60 milliseconds after 1.5 minutes has elapsed since the voted reset was sent to the failed channel, if the voted reset fails to recover the failed channel and alignment is still allowed, request from the application a power cycle of the channel.
Redundancy Management shall, within 60 milliseconds after 1.5 minutes has elapsed since the first power cycle request, if the FCR has not been recovered and alignment is still allowed, issue another request to the application for a power cycle of the channel.
Redundancy Management shall, if power cycle requests fail to result in a recovered channel, request the application to power down the channel and declare the channel to be permanently failed.
The application software shall have the capability to reset a permanently failed channel to its initial recovery state.
Redundancy Management shall reintegrate a processor that is temporarily disabled during a time when alignment was not permitted, when alignment is subsequently permitted.
An API call shall be provided that allows the application to notify FTSS that an FCR is intentionally being powered down.
Redundancy Management shall provide an API call to allow the application to specify whether recovery and alignment of failed FCRs is permitted.
While synchronization is being attempted, the FCP virtual group shall maintain synchronous operations.
Only when memory alignment is permitted, Redundancy Management shall initiate periodic resynchronization attempts on the FCP virtual group at a 1 second rate.
Redundancy Management shall perform memory alignment on a major frame boundary upon successful synchronization of all members of the FCP virtual group.
Redundancy Management shall, during memory alignment, configure the NE to mask out the processor being resynchronized.
Redundancy Management shall notify the application that alignment and reintegration of a processor will take place in 1 second.
Redundancy Management shall wait for the ICP to signal that it has completed initialization before suspending the application for memory realignment.
During alignment, Redundancy Management shall update MET.
Redundancy Management shall, if alignment is permitted, incorporate a new channel within 1.5 minutes after power is applied to the channel.
Redundancy Management shall, if alignment is permitted, serially incorporate two new channels if they are powered on simultaneously.
The FTSS API shall define a methodology for segregating and managing congruent aligned, congruent initialized, and non-congruent memory such that congruent aligned memory is aligned and congruent initialized memory is initialized during channel recovery.
Non-congruent memory is not modified during realignment.
The FTSS API shall specify a memory map that provides the boundaries for congruent aligned memory, congruent initialized memory, and non-congruent memory.
Memory alignment shall align processor state and congruent aligned memory locations.
The re-align function shall write the voted value from the currently synchronized channels into the target channel.
FTSS shall initialize congruent initialized memory locations from non-volatile memory.
The FCP watchdog timer shall remain active during memory re-alignment.
Memory alignment shall reset the watchdog timer such that, in the absence of a fault, the timer never expires and resets the processor.
Time Services shall provide Mission Elapsed Time and Separation Elapsed Time, with resolution partitioned according to rate group, in order to guarantee identical copies of time representation across all FCPs.
The Mission Elapsed Time shall be initialized to zero at the first 50 Hz frame.
The Separation Elapsed Time shall be initialized to zero at startup, and start counting up in the next frame after being notified via an API call that the X-38 vehicle has been released from the Space Shuttle Remote Manipulator System.
Time Services shall provide a utility timer to the application.
The utility timer shall shall be set to zero prior to the first application task running in the first minor frame of each major frame.
If transmission status indicates an error in telemetry and/or remote commanding operations 10 consecutive times, Support Services shall switch to the redundant MPCC device to continue telemetry and/or remote commanding operations.
If transmission status indicates an error in telemetry and/or remote commanding operations 10 consecutive times, Support Services shall continue to close and reopen a faulty MPCC device until status shows that the device has recovered.
In all error cases, Support Services shall attempt to choose an error-free FCC-MPCC path, switching back and forth between channels if necessary.
If transmission status indicates an error in telemetry and/or remote commanding operations 10 consecutive times, 4.
Support Services shall provide an API call which allows the application to specify which MPCC channels in a C&T FCR should be used for telemetry and/or command reception.
The telemetry capability shall transfer the telemetry block from the FCP to the FCC-MPCC connected to the CTC.
The telemetry capability shall signal the FCC-MPCC to transfer the telemetry block to the CTC.
The telemetry capability shall provide status data to FTSS FDI about each FCC-MPCC RS-422 link to the CTC.
Support Services shall provide an API call to specify the address and length of a telemetry buffer.
The Command Read capability shall check for the presence of a command and status message from each CTC on each FCC-MPCC at 10hz.
The Command Read capability on each FCP shall read the command data received from each CTC via the FCC-MPCC.
FTSS shall provide status data to the application about each FCC-MPCC RS-422 link to the CTC used for command data.
Support Services shall provide an API call to provide the current command data.
FTSS shall provide an API call which closes and deletes all rate groups, deletes all communication mechanisms, and then deletes all tasks.
FTSS shall provide an API call to allow the ICP application to determine on which channel it resides.
FTSS shall provide an API call to allow applications to send a status message to FDIR running on the FCP.
FTSS shall provide immediate message passing services in the form of pipes.
FTSS shall route messages to the proper virtual groups and socket.
If there is insufficient space to enqueue a message for transmission, FTSS shall return an error to the corresponding task.
FTSS shall only allow a single task residing on each specified virtual group to open the respective end of the pipe.
The presence or absence of an NEFU ICP shall not impact the FTSS software.
The FTSS shall provide an API call to retrieve the current minor frame number sent from the FCP over the VME interface.
The FTSS shall provide an API call to retrieve the current MET value sent from the FCP over the VME interface.
The FTSS shall provide an API call to retrieve the current SEP value sent from the FCP over the VME interface.
The FTSS shall notify the application on the ICP, via an API call, 2 minor frames prior to an alignment.
The Data Collector shall be designed to support the storage of TMDD data elements and message set information.
The C2C Project shall utilize the TMDD standard to transmit information.
DATEX/ASN shall be used to transmit the TMDD message sets.
TCP/IP shall be used to transmit the DATEX/ASN data.
The map shall display interstates and state highways on the graphical map.
The basemap data shall be derived from the North Central Texas Council of Governments Geodata warehouse.
The map user shall be able to alter the current magnification (zoom level) of the map.
The map user shall be able to pan the map in each of the following directions: North, South, East or West.
Each link displayed on the map shall be color coded to provide a graphical depiction of speeds.
A configuration file shall be provided to specify specific speed values.
The map shall display the current incidents known to the C2C Project.
The user shall be able to click on an incident icon to obtain further information about the incident.
All current incidents shall be displayed in tabular format with the following information contained in the table: Location, type of incident, severity of incident incident status, travel direction, and affected lanes.
The map shall be capable of displaying location and current message for a DMS.
The map shall be capable of displaying location and current signals for a LCS.
The map shall be capable of displaying location and status for a CCTV.
The Incident GUI shall allow the user to enter incident or lane closure information without the use of a Center.
The Incident GUI shall allow the user to input the following information for each incident: Location, description, status, affected lanes, detection time, response time, estimated time to clear queue, and queue length.
The Incident GUI shall allow the user to input the following information for each lane closure: Location, description, affected lanes, date, start time, and end time.
The GUI shall provide a list of previously entered incidents.
The GUI shall allow the data about an incident to be modified.
The GUI shall allow a user to delete a previously entered incident.
The GUI shall provide a list of previously entered lane closures.
The GUI shall allow a user to delete a previously entered lane closure.
The remote Center Control GUI shall be designed to execute on a public network and transmit equipment requests to the C-2-C software system.
The application will generate TMDD device control messages that will be sent to a Center for processing.
When the GUI application is initiated, the user shall be prompted for user name and password.
The user shall be provided with the capability to select a network identifier for a device command or control request.
Once a Center is selected, the user shall be able to select a DMS from a list and provide the following information: Target DMS, message to be displayed, and beacons being turned on or off.
Once a Center is selected, the user shall be able to select a LCS from a list and provide the target LCS and an assignment of lane arrows.
Once a Center is selected, the user shall be able to issue a CCTV switching command for source and destination port.
Once a Center is selected, the user shall be able to select a CCTV from a list and provide the target CCTV and device control.
Once a Center is selected, the user shall be able to select a Ramp Meter from a list and provide the target Ramp Meter and plan.
Once a Center is selected, the user shall be able to select a HAR from a list and provide the target HAR and text to be sent to the HAR.
Once a Center is selected, the user shall be able to select a Traffic Signal from a list and provide the target Traffic Signal and plan.
Once a Center is selected, the user shall be able to select a HOV from a list and provide the target HOV and plan.
Once a Center is selected, the user shall be able to select a School Zone from a list and provide the target School Zone and plan.
Once a Center is selected, the user shall be able to select a Reversible Lane from a list and provide the target Reversible Lane and plan.
Once an Center is selected, the user shall be able to select a Dynamic Lane from a list and provide the target Dynamic Lane and plan.
For each device command or control status request sent by the Remote GUI, the status returned from the network identifier will be displayed in a scrollable list on the GUI.
The C2C shall be able to operate in normal mode.
In this mode, the C2C receives data from all connected systems and combines the data into a single data store.
The C2C shall be able to operate in test mode.
In this mode, the C2C performs normal mode operations and also logs activities.
The condition monitoring system provides status and analysis reports for components.
The analysis may be in the form of spectres, trends, statistic figures or time tracking.
The values shall be available for display on operator HMI as well as for storage.
All data must be stored in the plant controller for transmission on demand.
Transfer of data from the buffers may be carried out offline without synchronising with real-time.
Access to operational functions has to be controlled by a set of rules.
Access control is to allow the capability to restrict an authenticated client to a pre-determined set of services and objects.
Supervision must allow local or remote monitoring of the status and changes of states for operational devices.
The Control function allows an operator or an automatic function to operate equipment like switchgear, transformers or a protection.
Control is subject to miscellaneous filters that check that there will be no damage if the control is issued.
In addition to single parameters, an application may have several possible pre-defined parameter sets, but only one active set.
An alarm is generated if some data of the system takes a value that shall be specially considered by the operator.
Alarm management functions allow an operator to visualise, acknowledge and clear alarms.
The system provides functions for continuous scanning of devices for alarms, operator control actions and changes in state, and for recording the events chronologically with date and time information.
Functions for a follow-up of parameter settings should include services to retrieve all parameters or to retrieve only those that differ from the default values.
Network management consists of functions needed to configure and maintain the communication network.
The time of devices within a communication system must be synchronised.
The self-check detects if an object or device is fully operational, partially operational or not operational.
The software management includes version control, download, activation and retrieval of software.
The configuration management is used to download, activate and retrieve configuration data.
The operative mode control allows an authorised operator to start and stop functions or objects within the system.
The setting function allows an operator to read and change one or more parameters affecting the behaviour of the object or device.
The test mode provides the possibility to check a function but avoiding impact on the process.
System security management allows control and supervision of the security of the system against unauthorised access or loss of activity.
The basic services of the communication system shall include connection establishment and release.
The basic services of the communication system shall include authentication.
The basic services of the communication system shall include identification of functional object and devices.
The basic services of the communication system shall include data access and transfer.
The basic services of the communication system shall include reliable communication over a network.
It should be possible to time stamp all data.
Time stamped data shall be stamped with 'last updated date and time'.
All analogue measured values should have readable properties.
The averaging time and the measuring and averaging method should be documented for all data.
It should be possible to group both analogue and binary values so they can be read in a single transaction.
The rights for each user to operate functions and to see data on different levels in the object hierarchy might be necessary to be set.
Data items transferred might need to be encrypted to prevent both malicious and false operation, as well as eavesdropping.
No functions regarding safety of persons shall be based on the communication system.
No functions regarding safety of plant and electrical network shall be based on the communication system.
All safety functions must be self-contained in the process or in the devices where systems interface and will trip automatically.
The time critical functions shall use short messages with a high priority.
Data-wise, the messages shall be small and shall be transmitted with a minimum of delay.
For most data, it must be possible to restore information.
The communication system shall include functionality to transfer stored data to central storage and processing after restoration of the communication.
The communication system shall allow for redundant communication channels.
Automatic procedures for detection of communication faults and for managing redundancy of system components shall be established.
Each device or object shall be self-descriptive and the system has to have a function to extract the information contained in the wind power plant objects.
It shall be possible to issue an identify request and get a list of all objects in a wind power plant, their names and possibly a short description for each object.
It should be possible to get the attributes and services for each object.
At least for default naming, a hierarchical name structure and an object data dictionary specialised for wind power plants should be used.
During data transmission, the message should at least include the name, values, scan frequency, time tag, and quality.
Communication and objects in the wind power plant shall be object based.
The system shall be able to manage naming of objects and variables in a hierarchical naming system in several levels.
Analogue values at the source shall be available as real-time online instant data as well as time averaged values.
Updating of analogue online values shall be selectable down to an interval of 1 sec.
All averaged values must be stored in the plant controller for retransmission on demand.
The values shall be accessible as processed data in a condensed and analysed format.
All binary process values shall be accessible.
The values shall be stored and displayed at level shift with the corresponding date and time tag.
A handshake procedure is required for all commands that start or stop a mechanical component, influence the status or operation mode of the wind turbine or change the software.
All other control commands shall give a response with the result of the command.
The binary commands may also include activation and deactivation of programs and parameter changes.
Operational alarms must be transmitted immediately after a triggering.
The alarms shall be available for display on the operator HMI as well as for storage.
Operational events must be stored in an event log in the plant controller for transmission on demand.
It should be possible to reset all the timers and the Reset Date shall be stored as a separate item.
Selected analogue values shall be stored in FIFO buffers.
Additionally it shall be possible to start a scanning of selected analogue values at a sampling rate up to 25 Hz and for a selectable duration.
The entire high rate scanning must be stored in the plant controller.
All binary values must be stored in the plant controller for retransmission on demand.
Additionally it shall be possible to start a scanning of selected binary values for a selectable duration.
Alarms must be stored in an alarm log.
Establishment, maintenance and release of connections or associations are to be handled by the communication system.
The APAF system shall acquire from ESOC the telemetry data of the ASPERA-3 Experiment and Mars Express Orbit and Attitude.
The APAF system shall process all ASPERA-3 science data into IDFS data sets.
The APAF system shall process the engineering and ancillary information necessary for calibration and science validation into IDFS data sets.
Intermediate files of cleaned-up ASPERA-3 and MEX OA telemetry shall be generated in the event that cleaned-up telemetry is not provided by ESOC.
The ASPERA-3 and MEX OA telemetry data shall be stored on a local SwRI archive.
The ASPERA-3 and MEX OA IDFS data sets shall be stored on a local SwRI archive.
Any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be stored on a local SwRI archive.
Web-based displays of the most current ASPERA-3 data shall be provided for public view.
Web-based displays defined by the ASPERA-3 team shall be provided where any available ASPERA-3 data can be used for science analysis.
The web-based displays defined by the ASPERA-3 team to be used for science analysis shall be password protected until the ASPERA-3 data is made public.
The APAF ground data system shall have built-in error handling.
ASPERA-3 and MEX OA IDFS data and any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be provided to all ASPERA-3 Co-Is.
IDFS data access software developed by SwRI shall be made available to the ASPERA-3 Co-Is.
Science analysis software developed by SwRI to analyze IDFS-formatted data shall be made available to the ASPERA-3 Co-Is.
The APAF system web server shall be password protected where appropriate to allow only pertinent ASPERA-3 team members access.
ASPERA-3 data shall be provided to NASA PDS in PDS-compliant form.
ASPERA-3 data shall be calibrated and validated prior to depositing in the NASA PDS.
SwRI shall provide IDFS data processing algorithms to IRF.
Science analysis software shall be integrated into the NASA approved data repository.
The HATS-GUI shall facilitate the creation, deletion, and modification of the files related to an application.
All files related to an application shall be stored in the same directory or folder.
The HATS-GUI shall manage file associations within an application.
The HATSGUI shall allow the user to examine and modify these associations.
The HATS-GUI shall orchestrate the parsing of transformation language programs and target files.
In order to expedite execution of transformations, parsed versions of files can be saved.
Parsing is done through the use of a parser program, which HATS-SML generates.
The HATS-GUI shall orchestrate the execution of transformation language programs.
In order for HATS-SML to execute a transformation program, the program must be parsed and saved as an SDT.
Input file names are embedded in the transformation language program.
During execution of a transformation language program, HATS-SML creates SDTs as output.
These SDTs contain a parsed version of the transformed output string suitable for use as input to another transformation or as input to the pretty-print service.
The pretty-print service transforms a target SDT into a text string according to formatting rules contained in a pretty-print style file.
The HATS-GUI shall capture data written to these streams and make that data available to the user.
The HATS-GUI shall facilitate the display of transformation output and error messages received from HATS-SML in response to parsing or transformation.
During a given session, data sets may be created, saved as files, used as inputs, or deleted.
The HATS-GUI will associate saved files with the application.
The HATS-GUI will make a list of these files available to the user and allow the user to select files for display.
The display of SDTs and pretty-printed text shall allow the user to manipulate the display by choosing portions of the tree to display and by allowing the user to search for text strings and sub-trees.
A user may set up an application for another user.
Before applying a transformation to a target file, a user must first prepare the application.
A user may also choose to view output from a previous transformation.
The file to be parsed and the parser file are inputs to HATS-SML.
HATS-SML applies the transformation language program to the target.
The HATS-GUI compares the time stamps on the lexical specification and grammar files to the time stamp on the application's parser file.
The HATS-GUI sends a message to the Host OS to start either the ParseTarget or the ParseProgram program and sends the names of the target file or program file, the output file, and the parser file to the Host OS.
HATS-SML parses the input file and writes the output to the output file.
The HATS-GUI writes the error message to the error window.
Any operation requiring the user to supply a file name shall allow the user either to select the files from a list derived from files in the currently open application or to key in a file name, a relative path name, or a complete path name.
For any operation where the user is prompted to select from a list, the user shall be able to cancel the operation.
When collecting generated output files from HATS-SML, the HATS-GUI shall overwrite any file whose name is generated automatically.
The HATS-GUI shall prompt the user for a file name for the file to be saved.
The HATS-GUI shall examine the contents of the application directory.
If a file with the given name already exists, the HATS-GUI shall prompt the user to overwrite the existing file.
If the user agrees to overwrite the file, the HATS-GUI shall attempt to write the new file using a temporary name, delete the previously existing file, and then rename the new file.
If the user does not agree to overwrite the existing file or if system errors occur while writing or renaming the new file or deleting the previous file, the new file shall not be written and the previous file shall be left unchanged.
In the case of an error, the HATS-GUI shall notify the user of the error.
Output pretty-printed text files and SDTs shall only be displayed when the user requests.
The main interface shall be menu driven.
The File menu shall contain menu items related to manipulating individual files and for closing the HATS-GUI application.
The Application menu shall contain items related to manipulating entire applications.
The Configure menu shall contain items related to modifying the configuration of the application.
The Run menu shall contain items related to executing the HATS-SML programs.
The View menu shall contain items related to viewing HATS-SML output.
The File/Select menu item shall provide an interface for selecting files within the currently open application.
The File/Edit menu item shall provide an interface for starting an editor as an external process.
The editor shall be started according to information in the application configuration.
The File/Save-as menu item shall provide an interface for saving a previously selected file under a different name.
The File/Delete menu item shall provide an interface for deleting a selected file.
The HATS-GUI shall prompt the user to confirm deletion prior to completing this action.
The File/Exit menu item shall provide an interface for exiting the HATS-GUI.
The Application/Select menu item shall provide an interface for selecting and opening an application.
The Application/Close menu item shall provide an interface for closing an application.
The Application/Save menu item shall provide an interface for saving application configuration information.
The Application/Save-as menu item shall provide an interface for saving an application and its associated files under a different name.
The Application/Delete menu item shall provide an interface for deleting an application and all the files in the application directory.
The Configure/Editors menu item shall provide an interface for the user to enter editor configuration information.
This information shall be used when editors are started as processes.
The Configure/Node Display menu item shall provide an interface for configuring the display of nodes.
The HATS-GUI shall allow the user to specify the number of levels of nodes to expand during SDT viewing.
The HATS-GUI shall allow the user to select the colors for types of displayed nodes in a displayed graph.
At a minimum, the system shall provide eight colors for displayed nodes.
The HATS-GUI shall allow the user to select the shapes for types of displayed nodes in a displayed graph.
At a minimum, the system shall provide two shapes, rectangles and ellipses, for displayed nodes.
The Configure/File Associations menu item shall provide an interface for associating files in an application.
The Configure/HATS-SML menu item shall provide an interface for the user to enter implementation-dependent information for starting HATS-SML processes.
The Run/Generate Parser menu item shall provide an interface for generating a parser program.
The Run/Parse Target menu item shall provide an interface for selecting and parsing target programs.
The Run/Parse Program menu item shall provide an interface for selecting and parsing transformation language programs.
The Run/Execute Transforms menu item shall provide an interface for selecting and executing transformation language programs.
The Run/Pretty-print menu item shall provide an interface for selecting SDTs and pretty-print style files and formatting the SDT according to the style.
The View/SDT menu item shall provide an interface for viewing, navigating through, and searching SDTs output from the execution of transformation programs.
The View/Text menu item shall provide an interface for viewing and searching pretty-printed text.
The View/Standard Error menu item shall provide an interface for viewing error strings collected from HATS-SML.
The View/Standard Output menu item shall provide an interface for viewing debugging information collected from HATS-SML.
The View/Select Text menu item shall provide an interface for selecting pretty-printed text or text strings associated with SDT displays.
The View/Copy Text menu item shall provide an interface for copying selected text into an operating system buffer.
The HATS-GUI shall interface with HATS-SML (version 2.0) in order to parse transformation language programs, execute transformation language programs, and create output SDTs, error messages, pretty-printed text, and parsed transformation language programs.
The interface shall consist of starting HATS-SML programs and passing command line arguments and capturing data written to the standard output and standard error streams of the HATS-SML processes.
The GUI shall allow the user to create, modify, copy, or delete applications or files regardless of the current status of HATS-SML.
If the HATS-GUI attempts to start a HATS-SML program and fails, the HATS-GUI shall notify the user by displaying the message "Unable to start HATS-SML".
The HATS-GUI shall provide any other details related to the failure that are available from the Host OS.
The user shall be able to initiate processes from an interface provided by the HATS-GUI.
The HATS-GUI shall optionally pass command line arguments to the process.
The HATS-GUI shall interact with the Host OS to find files in directories.
The HATS-GUI shall interact with the Host OS to compare time stamps for files.
The HATS-GUI shall allow a user to create an application minimally consisting of a lexical specification file, a grammar file, a user-defined functions file, and application configuration information.
The user shall be able to name this application.
All files associated with a given application shall be stored in one directory.
The directory in which application files are stored shall be named with the application name.
There shall be exactly one file describing the lexical specification of inputs associated with an application.
It shall have the file extension .spec.
There shall be exactly one file describing the grammar of inputs associated with an application.
It shall have the file extension .grm.
There shall be exactly one file describing the interpretation of function symbols associated with an application.
This file shall be written in ML and have the file extension .lib.
The HATS-GUI shall suggest a file name for the user whenever it prompts the user to enter a file name.
The HATS-GUI shall suggest the same file name for files copied to a different directory.
The HATS-GUI shall suggest a file name with a sequentially numbered extension for files copied to the same directory.
An application shall have associated with it an application configuration.
The HATS-GUI shall display output written to the standard output and standard error streams in a tab-selectable window.
Text in this window shall be cleared prior to executing individual HATS-SML programs, unless the programs are contained in a program script.
In the case of a script, the window contents shall be cleared prior to executing the script.
The system shall open a new window when the user selects to display output.
Display windows opened by the system shall have buttons for closing the windows.
A navigation window shall be available.
Each active display window shall have a mouse cursor, which indicates the location of the pointing device in the window.
Each display window shall have a keyboard cursor to track the current location in the display.
The keyboard cursor shall be movable by the arrow keys.
The keyboard cursor shall be set to the location of the mouse cursor when the pointing device is clicked.
When a user selects the File/Select menu item, the HATS-GUI shall provide the user with a list of files in the currently open application and allow the user to select a file.
If no application is currently open, the HATS-GUI will prompt the user to select and open an application, then prompt the user to select a file.
When a user selects the File/Save As menu item, the HATS-GUI shall prompt the user to enter a new name.
A new file shall be created in the currently open application with the newly entered file name.
The contents of the selected file shall be written into the new file, and the new file shall become the currently selected file.
When a user selects the File/Delete menu item, the HATS-GUI shall prompt the user to confirm the deletion operation.
If the user confirms, the currently selected file shall be deleted.
No file shall be currently selected at the end of this operation.
When a user selects the File/Edit menu item, the HATS-GUI shall request that the operating system start a process and load that process with the editor specified by the application configuration.
The name of a selected file shall be passed to the editor as a command line argument.
The editor started by the HATS-GUI shall be the editor associated with the file in the application configuration, or if there is no editor associated with the file, then the editor associated with the file type of the file in the application configuration.
If no editor is associated with either the file or the file type, then the default editor shall be used.
If no default editor has been selected, then the HATS-GUI shall present a list of the configured editors and allow the user to select an editor.
If no editors have been configured, then the HATS-GUI shall inform the user that an editor must be configured before starting an editor.
When a user selects the File/Exit menu option, the HATS-GUI shall request the host operating system to kill all currently active HATS-SML processes started by the HATS-GUI and halt the HATS-GUI process.
If changes have been made to the configuration but have not been saved, the user shall be prompted to save the configuration.
If the user agrees, the configuration shall be saved.
If the user does not agree, the configuration shall not be saved.
When a user selects the Application/Select menu item, the HATS-GUI shall display a list of directory names in the current working directory, allow a user to navigate the directory structure, and allow a user to select a previously created application.
When a user selects the Application/Close menu item, the HATS-GUI shall close the currently selected application.
When a user selects the Application/Save menu item, the HATS-GUI shall save all application configuration information to non-volatile storage.
When a user selects the Application/Save As menu item, the HATS-GUI shall prompt the user for a new application name.
The HATS-GUI shall create a new directory at the same level as the currently selected application.
All files in the application directory, including all subdirectories, shall be copied to the new directory, and the new directory shall become the currently selected application.
When a user selects the Application/Delete menu item, the HATS-GUI shall prompt the user to confirm the deletion operation.
If the user confirms, all files in the application directory shall be deleted and the application directory itself shall be deleted.
When deleting an application directory, if the application directory contains a subdirectory, the system shall confirm the deletion of the subdirectory with the user before continuing.
If the user does not confirm the deletion of the subdirectory, the application directory shall not be deleted.
When a user selects the Configure menu options, the HATS-GUI shall provide a list of elements in the application configuration, allow the user to select an element, then prompt the user for a value for the configuration element.
When a user selects the Run/Generate Parser menu option, the HATS-GUI shall generate the parser using the MakeParser HATS-SML program.
When a user selects the Run/Parse Target menu option, the HATS-GUI shall parse the selected target program by using the ParseTarget HATS-SML programs.
If no target program is selected, the HATS-GUI shall first prompt the user to select a target program.
When a user selects the Run/Parse Program menu option, the HATS-GUI shall parse the selected transformation language program by using the ParseTlp HATS-SML programs.
If no target program is selected, the HATS-GUI shall first prompt the user to select a transformation language program.
When a user selects the Run/Execute Transforms menu option, the HATS-GUI shall execute the ApplyTransformations HATS-SML programs.
When a user selects the View/SDT menu option, the HATS-GUI shall prompt the user to select an SDT file in the current application.
The file list shall include SDTs in the application.
When a user selects the View/Text menu option, the HATS-GUI shall prompt a user to select a pretty-printed text file in the current application.
When a user selects the View/Standard Error menu option, the HATS-GUI shall display the standard error screen showing all outputs written to the standard error stream since the most recent clearing of this data.
When a user selects the View/Standard Output menu option, the HATS-GUI shall display the standard error screen showing all outputs written to the standard output stream since the most recent clearing of this data.
When viewing an SDT, a single left mouse click on an expandable displayed node shall expand the node by displaying the node's children or collapse the node by hiding the node's children.
When a displayed node is expanded, the number of levels of children added to the displayed graph shall be determined by the application configuration.
When viewing an SDT, a single left mouse click on an already-expanded displayed node shall collapse the displayed node.
When a displayed node is collapsed, all descendants of the node are removed from the displayed graph.
The HATS-GUI shall collect process exit codes from HATS-SML processes.
The GUI shall allow the user to import a file into the selected application.
The HATS-GUI shall confirm that the transformation language program exists.
The HATS-GUI shall check that the parser file is younger than the grammar and lexical specification files and that the parser file was generated from the grammar and lexical specification files.
If this is not the case, the HATS-GUI shall generate a new parser file.
The HATS-GUI shall check that a parsed version of the transformation language program exists and is younger than the parser file and the transformation language program file.
If it is not, the HATS-GUI shall generate a new parsed version of the transformation language program.
The HATS-GUI shall start the FindTarget program using the transformation language program as input.
The HATS-GUI shall take the list of target program files generated by FindTarget, and for each file in the list, it shall check that a parsed version of the target program exists and is younger than the target parser file and the target program file.
If it is not, the HATS-GUI shall generate a new parsed version of the target program.
The HATS-GUI shall start the ApplyTransformation program in HATS-SML and pass the parsed transformation language program file name, the user defined library file name, and the output file name to the ApplyTransformation program.
The HATS-GUI shall redirect the standard output and standard error streams and capture any text written to those streams.
The HATS-GUI shall allow the user to continue working while transformations are taking place.
Thus a user shall be able to edit files, view output, and transmit other problems to HATS-SML while waiting for HATS-SML to generate output.
The HATS-GUI shall allow the user to execute a script file.
The HATS-GUI shall begin with the first command and execute the commands sequentially until either an error occurs or all commands in the script file have been executed.
Prior to starting the execution of a script file, the display screens for the standard error and the standard output shall be cleared.
The HATS-GUI shall allow a user to select output files in the application to display.
The HATS-GUI shall allow a user to display selected output files.
The manner in which the output is displayed shall depend on the type of the output.
The user shall be able to select an arbitrary set of displayed nodes in a displayed graph.
Selected displayed nodes shall be indicated visually.
A single node shall be selected by right-clicking the mouse cursor on the node.
A single node shall be selected by moving the keyboard cursor to the node and pressing the enter key.
Clicking and dragging the pointing device selection rectangle around a set of displayed nodes shall select a set of adjacent nodes.
A set of nodes shall be selected by holding the shift key while selecting nodes.
The user shall be able to deselect all selected displayed nodes by clicking either the right or left mouse buttons while the mouse cursor is not pointed at any displayed nodes and the shift key is not depressed.
The user shall be able to deselect all selected displayed nodes by by pressing the escape key.
When viewing an SDT, selecting nodes shall result in the highlight of all displayed nodes in the smallest well-formed tree of the selected nodes.
When the system displays a navigation window, the user shall be able to select a current SDT location by clicking the mouse cursor in the navigation window.
When both an SDT and a pretty-printed text display corresponding to a single transformed target file are open, highlighting and cursor location motion shall be mirrored in the two windows.
The display of an SDT shall also result in the display of text from leaf nodes in a text display area.
The text displayed in the text display area shall correspond to the concatenation of the node labels of the leaf nodes of the displayed graph.
If a leaf displayed node corresponds to a non-terminal SDT node, the label in the text window shall be surrounded by pointed brackets.
The user shall be able to display more than one SDT at a time.
Each SDT shall be displayed in a separate window.
The HATS-GUI shall provide for the manipulation and display of SDTs.
SDTs shall be displayed as directed acyclic graphs with nodes and edges.
Nodes in the displayed graph correspond to nodes in the SDT.
Edges in the displayed graph correspond to the parent-child relationship between nodes in the SDT.
Initially, a displayed graph will have a single displayed node.
That node will correspond to the root of the SDT.
When a displayed node and its children are displayed simultaneously, the parent node shall be displayed higher than the children.
All displayed children of a single node shall appear at the same height.
The user shall be able to control the display by choosing the color and shapes of displayed nodes based on node type.
The HATS-GUI shall use the shape and color of displayed node types stored in the application configuration to display nodes.
The user shall be able to expand displayed nodes.
The HATS-GUI shall change the graph display by adding the descendant nodes to the displayed graph.
The user shall be able to collapse displayed nodes.
The HATS-GUI shall change the displayed graph by removing all descendants of the selected displayed nodes.
The user shall be able to hide a set of selected displayed nodes.
The HATS-GUI shall change the display by removing the selected nodes from the display and changing the parent and descendant nodes of the removed nodes to nodes with hidden descendants and parents, respectively.
The user shall be able to issue an unhide instruction that reverses the hide instruction for all displayed nodes.
After issuing the unhide instruction, a user shall be able to issue a rehide instruction that reverses the unhide instruction.
All displayed nodes hidden before the most recent unhide instruction shall become hidden.
The HATS-GUI shall allow the user to expand the SDT by a predetermined number of node levels.
The number of levels expanded is set in the application configuration.
The HATS-GUI shall provide the function to fully expand a sub-tree regardless of the node expansion level in the application configuration.
The user shall be able to view multiple SDTs simultaneously.
SDT displays shall also provide the user with a view of text associated with the leaves of the displayed sub-tree.
This text shall be copy-and-pasteable in the host operating system.
SDT displays shall provide the user with the option to refresh the display.
When a display is refreshed, the current display is erased, the SDT file is read, and a new SDT display is generated.
The new SDT display shall approximate the previous SDT display by expanding the SDT to the same number of nodes, if this is possible.
If a displayed graph or a text display is too large to fit inside its window, the windows shall have scroll bars attached to them.
Dragging scrollbar buttons shall scroll the display.
Pressing the arrow keys of the keyboard shall also scroll the display.
A left arrow key moves the cursor to the left one character.
If the cursor is at the beginning of a line, the cursor is moved to the end of the previous line.
If there is no previous line, the cursor does not move.
A right arrow key moves the cursor to the right one character.
An up arrow key moves the cursor up one line.
If there is text in the same column, the column does not change.
If there is no text in the column above the current cursor location, the cursor is moved to the end of the previous line.
A down arrow key moves the cursor down one line.
If keyboard cursor movement causes the keyboard cursor to move to text or graph nodes not currently displayed, the display will scroll the minimal amount to display the current cursor location.
A left arrow key moves the cursor to the next unhidden node to the left.
The node to the left does not need to be a sibling of the current node, but it does need to be at the same level as the current node.
If there are no nodes to the left, the cursor does not move.
A right arrow key moves the cursor to the next unhidden node to the right.
The node to the right does not need to be a sibling of the current node, but it does need to be at the same level as the current node.
If there are no nodes to the right, the cursor does not move.
An up arrow key moves the cursor to the closest ancestor that is not hidden.
If there is no such node, the cursor does not move.
A down arrow key moves the cursor to the leftmost, nearest descendant that is not hidden.
The pointing-device cursor shall track the motion of the pointing device.
The keyboard cursor shall move to the text element or graph node closest to the pointing-device cursor when the pointing device is clicked.
If the displayed graph of the entire SDT is too large for the window, a separate, small window with a compressed view of the SDT shall be displayed.
In this navigation window, a representation of the entire SDT will be drawn.
A small box will be displayed showing the part of the SDT currently displayed in the main tree display window.
The user shall be able to turn the navigation window on and off.
The HATS-GUI shall provide the user the capability to search SDTs.
The user shall enter a search pattern.
The HATS-GUI shall search the SDT for a matching pattern.
When a match is found, the HATS-GUI shall highlight the matching displayed nodes and center the display on the left-most, top-level displayed node in the matching pattern.
If no matches are found, the HATS-GUI shall display a message stating "No Match Found".
When searching for SDT patterns, search begins at the SDT node corresponding to the node at the current keyboard cursor location.
Search continues top-to-bottom, left-to-right until the end of the SDT is encountered.
When the end of the SDT is encountered, search will continue from the root of the SDT until arriving back at the starting location.
The HATS-GUI shall provide for repeating a search.
Repeating a search shall find the next matching sub-tree starting from the current keyboard cursor location.
Search terminates when either a matching sub-tree is found or the search arrives at the original starting location.
The HATS-GUI shall provide for repeating a search in the reverse direction.
Searching in the reverse direction continues right-to-left, bottom-to-top.
The HATS-GUI shall provide the user the capability to search the text display for text sub-strings.
The user shall be prompted to enter a text string describing a string pattern.
The HATS-GUI shall search the text for a matching pattern.
When a match is found, the HATS-GUI shall highlight the matching text and center the display on the left-most element of the matching text.
When searching for text patterns, search begins at the current keyboard cursor location and continues left-to-right, top-to-bottom until the end of the text is encountered.
The formatting of the displayed pretty-printed text shall be faithful to the formatting represented in the pretty-printed text file.
No additional white space shall be inserted, and a fixed width font shall be used to display the text.
The user shall be able to select pretty-printed text files to display.
Selected pretty-printed text shall be displayed in a separate window.
Windows for pretty-printed text shall allow for scrolling left, right, up, and down if the text is too large to display in the window.
The keyboard cursor shall be set to this location.
The HATS-GUI shall not halt as a result of any error messages received from HATS-SML.
The HATS-GUI shall collect error messages from HATS-SML in a single display area.
The display area shall be a window accessible via a window tab.
The display shall list all error received from HATS-SML in the order received.
Errors shall not be displayed until requested by the user.
The user shall be able to clear the error window without restarting the HATS-GUI.
When both an SDT and a pretty-printed text display corresponding to a single transformed target file are open, navigation in the SDT window shall result in navigation in the pretty-printed text window.
Searching, selecting, and cursor location motion should be mirrored in the two windows.
When both an SDT and a pretty-printed text display corresponding to a single transformed target file are open, navigation in the pretty-printed text window shall result in navigation in the SDT display.
Selecting, and cursor location motion should be mirrored in the two windows.
The cluster decides whether it is even open for job submissions, and whether the user that is trying to submit job is a valid user or not.
Show the user the available options about the submitted job, and information about the progress of job execution.
Process selected options if choices are provided to the user to view different aspects of job information.
Remove job from the queue and update cluster status.
Revise scheduling decisions about resource allocation to pending jobs and submission of new jobs.
The details of the job are retrieved and then these details are set in variables that represent the state of the cluster and its queues.
The parsed parameters are passed on to the scheduling module where the job may be accepted or rejected.
Based on the job parameters, the scheduler figures out a priority of the job that reflects the share of CPU time that it deserves and needs according to the specified criteria.
The scheduler determines whether the job can be finished by the requisite deadline, given the execution time of the job and the execution status of other pending jobs on various nodes.
A suggested deadline or cost is given to the user, as a precondition for the job to be accepted.
Allocate tickets to a job based on its budget and deadline and the budget and deadlines of all other jobs on the execution host under debate.
Calculate the stride and the pass of the job, where the stride is simply the global stride constant divided by the tickets and the pass is initially just the stride.
Libra first looks at the load on each of the hosts and sorts them in ascending order, choosing the host that is least loaded.
It then selects the appropriate queue.
The scheduler sends the job to the appropriate queue and it joins the competition for resources.
Libra first reserves the amount of resources that will be required by the job on the node.
It then updates the execution host queue status and sends that information about the additional load on the queue and node under consideration to the central information store on the master host.
It looks at all the jobs on the cluster and selects the one with the minimum pass value, and allots it a quantum.
The pass of that job is then advanced by its stride.
In case of a tie, the arbitrary FIFO job ordering is used.
This loop is repeated until there are no jobs left to run on a queue.
Exhaustive searches of the entire set of combinations of jobs will not be done, heuristics will be developed for this scheduling problem.
The new Service Provider will notify the old Service Provider according to processes internal to the Service Providers.
When a number is ported, both the old and new Service Providers can send a notification to the NPAC SMS.
The NPAC validates the data for each notification and attempts to match the notification with a concurring notification from the other Service Provider.
If a notification is missing from either provider after a tunable time period, the NPAC sends a request for the missing notification.
If the data provided with the notification is valid, the NPAC SMS creates a pending Subscription Version and awaits the concurring notification.
If the data is invalid, the NPAC SMS reports a specific error to the sender of the data and discards the request.
The NPAC will send a final concurrence notification to the Old Service Provider who did not send a concurring notification.
The two Service Providers involved in the number port will coordinate and perform the physical changes to their respective networks.
The new Service Provider sends an activate notification to the NPAC SMS.
If the current date is greater than or equal to the new Service Provider due date, the flow continues.
Otherwise, broadcast of the activation is rejected.
Upon receipt of the activation notification, the NPAC SMS broadcasts the network update data in real time to the appropriate Service Providers' Local SMSs.
If the NPAC SMS does not receive positive acknowledgment of the broadcast from all Service Providers, the NPAC SMS will rebroadcast the network data download to the Service Providers that did not acknowledge the original broadcast.
The NPAC SMS will perform the rebroadcast a tunable number of times within a tunable time frame.
If the tunable rebroadcast parameters have been exceeded, the NPAC staff will initiate repair processes with the appropriate Service Providers.
The NPAC SMS will send the list of Service Providers associated with each failed or partial failure subscription version to the old and new Service Providers.
Upon receiving the network data download broadcast from the NPAC SMS, all Service Providers' local SMSs will confirm the receipt of the download broadcast, and update their network elements.
When a ported number is being disconnected, the customer and Service Provider will agree on a date.
The Service Provider will send a notification to the NPAC SMS indicating the date of the physical disconnect of the number and, optionally, the date that the disconnect information is to be broadcast to all Local SMSs.
The NPAC SMS will send delete actions containing the disconnect information based on the effective release date specified by the Service Provider.
If no effective release date is specified on the disconnect request, the NPAC SMS processes the request immediately.
The NPAC SMS will broadcast the effective release date and disconnect date to the donor SOA.
The NPAC SMS will broadcast the disconnect information to all Service Providers.
If the broadcast is not acknowledged, the disconnect information will be resent a tunable number of times within a tunable time frame.
If the tunable parameters for the collection of responses have been exceeded, the NPAC staff will initiate repair processes with the appropriate Service Providers, and send a list of failed Service Providers to the current Service Provider.
If NPAC SMS intervention is needed to resolve the problem, up to three repair actions may be required before repairs can be initiated.
If a Subscription data query is required to initiate the repair, a query is launched to the Local Service Providers.
If a Subscription data audit is required before the repair can be initiated, an audit is initiated with the local Service Providers.
There will be audit capabilities in the NPAC SMS to aid in isolating problems.
A Service Provider may request a download of subscription data to assist in the repair process, if necessary.
If inaccurate routing data is found, the NPAC SMS will broadcast the correct subscription data to any involved Service Provider's networks to correct inaccuracies.
If the new Service Provider has not yet acknowledged a Subscription Version in Cancel-Pending state, the Subscription Version is put into Conflict, and the Cause Code is updated accordingly.
If the old Service Provider requests that a Subscription Version be put in conflict, it must be the first time the request has been made.
The request must be received in the NPAC a tunable number of hours prior to 12:00 A.M. of the new Service Provider.
If the old Service Provider has not satisfied these conditions then the Subscription Version cannot be put into conflict.
Subscription version's conflict status "on" is achieved when a Service Provider notifies NPAC SMS personnel of a disagreement between the new and old Service Providers as to whether or not a TN may be ported.
The old Service Provider can only place a "pending" Subscription Version in "conflict" one time.
A Subscription Version creation with authorization set to "False" from the Old Service Provider causes the NPAC SMS to place the Subscription Version in conflict during the "Create Version" process.
Non-concurrence from the New Service Provider causes the NPAC SMS to cancel the Subscription Version during the "Create Version" process.
If the conflict is resolved, the new Service Provider sets the Subscription Version status to "pending".
If the conflict is not resolved with the tunable maximum number of days, the NPAC SMS cancels the Subscription Version, and sets the Cause Code for the Subscription Version.
If the Old Service Provider sends the Cancel message, the Subscription Version is set to "cancel-pending".
A notification is sent to both Old and New Service Providers.
If the New Service Provider sends a cancellation acknowledgment, the status is set to "canceled".
If the New Service Provider does not send a cancellation acknowledgment, the NPAC SMS waits for both Cancellation Concurrence Windows to expire, at which time the status is set to Conflict.
The Old Service Provider may optionally send the cancellation acknowledgment.
If the New Service Provider sends the Cancel message, the Subscription Version is set to "cancel-pending".
If the Old Service Provider sends a cancellation acknowledgment, the status is set to "canceled".
If the Old Service Provider does not send a cancellation acknowledgment, the NPAC SMS waits for both Cancellation Concurrence Windows to expire, at which time the status is set to Cancel.
The New Service Provider may optionally send the cancellation acknowledgment.
If the Subscription Version status has been set to conflict "on" for 30 days and no resolution has occurred, the NPAC SMS will cancel the Subscription Version, set the Cause Code for the Subscription Version, and notify both the old and new Service Providers of the cancellation.
When both Service Providers agree to resolve the conflict, the new Service Provider will send a request to the NPAC SMS to change the Subscription Version status to pending.
If there is planned downtime for the NPAC SMS, the NPAC SMS will send an electronic notification to the Service Providers' SOAs that includes information on when the downtime will start, how long it will be, and if they will be required to switch to the backup or disaster recovery machine.
If there is unplanned downtime, the NPAC will assess how long the primary machine will be down.
The NPAC will notify all of the Service Providers by electronic notification and telephone calls to the Service Providers' contact numbers.
The notification will describe the situation and the planned action.
The Service Providers will attempt to switch to the backup NPAC.
The NPAC Service Providers will switch to the backup or disaster recovery machine as indicated in the notification.
The Service Providers must use an alternate connection route to the backup NPAC and establish associations with the backup NPAC application.
When the backup NPAC application and database are online, processes will proceed as normal.
The Service Provider should continue to process as normal when connected to the backup NPAC.
When the primary machine is brought back up, the backup NPAC will advise the Service Providers of the timing of their switch back to the primary machine.
The Service Providers reestablish associations with the primary NPAC application using their normal connections.
When the primary NPAC is available, NPAC personnel will notify Service Providers of the end of the cutover quiet period.
From the time both Service Providers have sent a valid notification of a new Subscription Version to the time the Subscription Version is activated, either Service Provider may send a message to the NPAC SMS to cancel the Subscription Version.
If this occurs, the NPAC SMS will notify both Service Providers that the Subscription Version is in a cancel-pending state.
If a Service Provider issues a cancel on a Subscription Version that was created by that Service Provider and not concurred to by the other Service Provider involved in that port, or if the Subscription Version was initiated, then subsequently canceled by the NPAC, the Subscription Version will be canceled immediately and a notification will be sent to both Service Providers.
When notified that a Subscription Version has been set to cancel-pending, the non-requesting Service Provider must concur by returning a cancel-pending acknowledgment to the NPAC SMS within a tunable amount of hours.
If the NPAC does not receive acknowledgment in the allowable time from the Service Provider, a request is sent to that Service Provider for a cancel-pending-acknowledgment.
If the missing cancel-pending-acknowledgment is not received within a tunable time frame, the Subscription Version status is set to "conflict" if it is the new Service Provider that failed to acknowledge, but is set to cancel if the old Service Provider failed to acknowledge.
In either case, the Cause Code is then set for the Subscription Version, and both Service Providers are then notified of the Subscription Version status change.
When acknowledgment is received from both Service Providers, within the allowed time frame the NPAC SMS will set the Subscription Version to canceled in its database, update the Cause Code for the Subscription Version, and notify both Service Providers that the Subscription Version has been canceled.
All canceled Subscription Versions are purged from the NPAC database after a tunable period.
Any Service Provider can request an audit of another Service Provider's LSMS.
Upon receipt of an audit request, the NPAC SMS queries the appropriate Service Provider's Local SMS databases.
The NPAC SMS compares its own Subscription Version data to the data it finds in the targeted Local SMS Subscription Version databases.
The NPAC SMS updates Subscription Version information in the appropriate Local SMS databases.
Once the NPAC SMS has completed updates to the appropriate Local SMSs, the NPAC SMS generates an Audit Discrepancy report to the Service Provider SOA that initiated the Audit request.
The NPAC SMS sends the audit results to the Service Provider SOA that initiated the audit request, to indicate the audit is complete.
The NPAC SMS generates the report that Service Provider Personnel requested via either the SOA Low Tech to NPAC SMS interface or based on NPAC personnel input into the NPAC Administrative GUI.
The NPAC SMS delivers the report to the destination specified in the request.
NPAC SMS shall allow NPAC personnel to create a new LNP NPA NXX for a Service Provider.
NPAC SMS shall, for a mass update request, only send updates for subscription versions that are not filtered on the Local SMS.
NPAC SMS shall allow NPAC personnel to select Subscription Versions for mass update which match a user defined combination of any of the following: SPID, LNP Type, TN, TN range, LRN, DPC values, SSN values, Billing ID, End User Location Type or End User Location Value, on the NPAC Administrative Interface.
NPAC SMS shall allow NPAC personnel to specify a mass update action to be applied against all Subscription Versions selected for LRN, DPC values, SSN values, Billing ID, End User Location Type or End User Location Value.
NPAC SMS shall require at least one selection criteria to be entered for a mass update.
NPAC SMS shall match the Service Provider ID entered as selection criteria with the New or current Service Provider ID in the Subscription Version.
NPAC SMS shall create an old Subscription Version with a new version ID for an active Subscription Version involved in a mass update before applying changes.
NPAC SMS shall broadcast no data to the Local SMSs due to the creation of an old Subscription Version with a new version ID for an active Subscription Version involved in a mass update before applying changes.
NPAC SMS shall log an exception and proceed with Mass Update processing upon finding a subscription version in sending, disconnect pending, or partial failed status.
NPAC SMS shall produce an exception report for NPAC Personnel when requested that lists the Subscription Versions that were exceptions not processed during Mass Update processing.
NPAC SMS shall require NPAC personnel to specify a Service Provider ID when entering Selection Criteria for a Mass Update.
NPAC SMS shall have the capability to identify all Subscription Versions affected by mass changes and automatically carry out the required updates to modified data in the Local SMSs.
NPAC SMS shall allow NPAC Personnel, via a mass update, to update the block holder default routing information for a 1K Block as stored in the NPAC SMS.
NPAC SMS shall reject a mass update request by NPAC Personnel and issue an error message if the TN Range and LNP Type of either POOL or none is entered as Selection Criteria for the requesting Service Provider and intersects an existing 1K Block for that requesting Service Provider, as stored in the NPAC SMS, other than Blocks with a status of old.
NPAC SMS shall reject a mass update request to a Block if the Block's status is Not active, or if the Block Failed SP List contains one or more Service Providers.
NPAC SMS shall download Number Pooling Block Information for mass updates using the Number Pooling Block Object via the NPAC SMS to Local SMS Interface when the Service Provider's EDR Indicator is True at the time of the mass update request.
NPAC SMS shall download Number Pooling Block Information for mass updates using Subscription Versions with LNP Type of POOL via the NPAC SMS to Local SMS Interface when the Service Provider's EDR Indicator is False at the time of the mass update request.
NPAC SMS shall not break up Subscription Versions of LNP Type POOL in a 1K Block when downloading Number Pooling Block Information for mass updates via the NPAC SMS to Local SMS Interface to non-EDR Local SMSs.
NPAC SMS shall create an old Block with a new version ID for an active Block involved in a mass update before applying changes.
NPAC SMS shall support an offline batch download to mass update Local SMSs with Subscription Versions, NPA-NXX-X Information, Number Pool Block and Service Provider Network data.
NPAC SMS shall be able to communicate creation or deletion of NPA-NXX data and LRN data for a Service Provider to Local SMSs and SOAs.
NPAC SMS shall be able to communicate creation, modification, or deletion of NPA-NXX-X data for a Service Provider to SOAs or Local SMSs.
NPAC SMS shall inform all Service Providers about the allocation of the NPA-NXX-Xs for pooling to the Block Holder via the SOA to NPAC SMS Interface and/or NPAC SMS to Local SMS interface.
NPAC SMS shall inform all Service Providers about the availability of the NPA NXXs for porting via the NPAC SMS to Local SMS and SOA to NPAC SMS interfaces or the Web bulletin board.
NPAC SMS shall inform all Service Providers about a new Service Provider and the associated LRNs via the NPAC SMS to Local SMS and SOA to NPAC SMS interfaces.
NPAC SMS shall post the new Service Providers and/or new LRNs on the Web bulletin board.
NPAC SMS shall inform all Service Providers about the allocation of the NPA-NXX-Xs for pooling to the Block Holder via the Web bulletin board.
NPAC SMS shall allow Service Providers to add their NPA-NXX data via the NPAC SMS to Local SMS interface or the SOA to NPAC SMS interface.
NPAC SMS shall allow Service Providers to add their NPA-NXX data with an effective date that is set to a past, present, or future date.
NPAC SMS shall allow Service Providers to add their LRN data via the NPAC SMS to Local SMS interface or the SOA to NPAC SMS interface.
NPAC SMS shall allow Service Providers to delete their NPA- NXX data via the NPAC SMS to Local SMS interface or the SOA to NPAC SMS interface provided the changes do not cause any updates to the Subscription Versions, Number Pooling NPA-NXX-X or Number Pooling Block Information.
NPAC SMS shall allow Service Providers to delete their LRN data via the NPAC SMS to Local SMS interface or the SOA to NPAC SMS interface provided the changes do not cause any updates to the Subscription Versions, or Number Pooling Block Information.
NPAC SMS shall provide a mechanism for the Service Provider to indicate whether or not they want NPA-NXX data and LRN data downloaded to their Local SMS via the NPAC SMS to Local SMS Interface and/or SOA via the SOA to NPAC SMS interface.
NPAC SMS shall download NPA-NXX data and LRN data via the NPAC SMS to Local SMS Interface and/or the SOA to NPAC SMS interface if the indicator is on.
NPAC SMS shall periodically perform NPAC SMS database extracts of active Subscription Versions on an NPA-NXX basis to an ASCII file.
NPAC SMS shall store database extract files at the NPAC SMS FTP site for Local SMS file retrieval.
NPAC SMS shall allow NPAC personnel to specify database extract file creation on a weekly, monthly, or quarterly basis.
NPAC SMS shall allow NPAC personnel to specify an NPA-NXX for database extract file creation.
NPAC SMS shall prevent the entry of pipe characters as part of text strings.
NPAC SMS shall allow NPAC personnel to create a new LRN for a service provider.
NPAC SMS shall support a permissive dialing period, during which dialing of both NPAs is allowed during NPA splits.
NPAC SMS shall accept both the old and new NPAs during the permissive dialing period, but will only respond and download with the new NPA-NXX, except for query requests that span NPAs.
NPAC SMS shall perform an update to remove NPAC SMS mapping of the old NPA-NXX) to the new NPA-NXXs for Subscription Versions associated with an NPA split after the expiration date of the permissive dialing period.
The service provider responsible for the NPA split communicates NPA Split information to the NPAC.
NPAC SMS shall verify that the new and the old NPA-NXXs involved in an NPA Split exist when NPAC personnel enter the split information.
NPAC SMS shall report an error to NPAC personnel and reject the NPA Split upon determining that the new or old NPA-NXXs involved in an NPA Split do not exist when the NPA Split information is entered.
NPAC SMS shall verify that the new NPA-NXXs involved in an NPA Split has an effective date equal to the start date of permissive dialing when NPAC personnel enter the NPA Split information.
NPAC SMS shall report an error to NPAC personnel and reject the NPA Split upon determining that a new NPA-NXX involved in an NPA split has an effective date not equal to the start date of permissive dialing.
NPAC SMS shall verify that the new NPA-NXXs involved in an NPA Split are not currently involved in another NPA Split when NPAC personnel enter the NPA split information.
NPAC SMS shall report an error to NPAC personnel and reject the NPA Split upon determining that a new NPA-NXX involved in an NPA Split is currently involved in another NPA Split.
NPA SMS shall verify that only pending, old, conflict, canceled, or cancel-pending Subscription Versions exist in the new NPA-NXX involved in an NPA Split upon entering split information.
NPA SMS shall report an error and reject the NPA Split upon determining that there are Subscription Versions with a status other than pending, old, conflict, canceled, or cancel pending in the new NPA-NXX involved in an NPA Split.
NPAC SMS shall prevent an old or new NPA-NXX involved in an NPA split from being deleted from the network data during permissive dialing.
NPAC SMS shall leave the LRN information in Subscription Versions involved in the split unchanged during NPA split processing.
NPAC SMS shall leave filters for NPA-NXXs involved in an NPA split unchanged.
NPAC SMS shall query the LSMS systems for the new NPA-NXXs when an audit is run during the NPA split permissive dialing period.
NPAC SMS shall allow the modification of the end of permissive dialing during permissive dialing provided the date is not less than the current date.
NPAC SMS shall allow the removal of an NPA-NXX during permissive dialing from the NPA Split information as an NPA-NXX involved in the NPA Split.
NPAC SMS shall, upon removal of an NPA-NXX during permissive dialing, modify the TN of any subscription versions involved in a split existing in the new NPA-NXX to the old NPA-NXX.
NPAC SMS shall not allow the addition of an NPA-NXX to an NPA Split after the split data is entered.
NPAC SMS shall allow the removal of pending NPA Split information prior to the start of the permissive dialing period.
NPAC SMS shall log and remove NPA Split Information from the NPAC SMS at the end of the permissive dialing period.
NPAC SMS shall broadcast no information to the SOAs or LSMSs about the creation, modification, or deletion of Subscription Versions due to NPA Split processing on the NPAC SMS.
NPAC SMS shall retain the Subscription Version ID of the Subscription Versions involved in an NPA Split.
NPAC SMS shall update all Subscription Versions with a status other than old or canceled with the new NPA at the beginning of the Permissive Dialing Period.
NPAC SMS shall verify that the old NPA-NXXs involved in an NPA Split are not currently involved in another NPA Split when NPAC personnel enter the NPA split information.
NPAC SMS shall report an error to NPAC personnel and reject the NPA Split upon determining that an old NPA-NXX involved in an NPA Split is currently involved in another NPA Split.
NPAC SMS shall verify that the end date of permissive dialing is greater than the start date except in cases where there is no permissive dialing period.
NPAC SMS shall verify that the owner of the old NPA-NXX matches the owner of the new NPA-NXX for each NXX in a NPA split.
NPAC SMS shall report an error to NPAC personnel and reject the NPA Split upon determining that the owner of the old NPA-NXX does not match the owner of the new NPA-NXX for each NXX in a NPA split.
NPAC SMS shall change the old NPA-NXX to the new NPA-NXX when a Subscription Version is created with the old NPA-NXX during the permissive dialing period.
NPAC SMS shall support a Current and Pending NPA Split Report for NPA Splits before or during their permissive dialing period that contains all split data entered.
NPAC SMS shall support a NPA Split History Report for completed NPA Splits that contains all split data entered.
NPAC SMS shall create an old Subscription Version with a new version ID for an active Subscription Version involved in an NPA split at the start of permissive dialing for the old NPA.
NPAC SMS shall broadcast no data to the Local SMSs due to the creation of an old Subscription Version with a new version ID for an NPA split.
NPAC SMS shall automatically delete the old NPA-NXX from the Portable NPA-NXX Information in the NPAC, upon reaching the end of the permissive dialing period for the old NPA-NXX involved in an NPA Split.
NPAC SMS shall automatically create a new NPA-NXX-X in the Number Pooling NPA-NXX-X Information when a valid request is made to add an NPA Split if the old NPA-NXX-X exists but the new NPA-NXX-X does not exist in the Number Pooling NPA-NXX-X Information.
NPAC SMS shall reject the request and generate an error message to the NPAC Personnel when a request is made to add an NPA Split, and the new NPA-NXX-X already exists in the Number Pooling NPA-NXX-X Information.
NPAC SMS shall populate the fields for the automatically generated new NPA-NXX-X in the Number Pooling NPA-NXX-X Information, when a request is made to add an NPA Split or an old NPA-NXX-X is created during a split.
NPAC SMS shall, upon the removal of an NPA-NXX from an NPA Split prior to the end of permissive dialing, remove the new NPA-NXX-X from the NPA-NXX-X Holder Information.
NPAC SMS shall, upon entry of an old NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, automatically add an entry for the new NPA-NXX-X for an NPA-NXX scheduled for an NPA Split.
NPAC SMS shall reject the request and generate an error message to the NPAC Personnel when a request is made to add a new NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, and the NPA-NXX is scheduled for an NPA Split.
NPAC SMS shall, upon entry of an NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, automatically add an entry for the new or old NPA-NXX-X for an NPA-NXX currently in Permissive Dialing in an NPA Split.
NPAC SMS shall, upon modification of an old NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, automatically modify the corresponding entry for the new NPA-NXX-X for an NPA-NXX scheduled for an NPA Split, if the new Effective Date is greater than or equal to the start of the Permissive Dialing Period.
If the modified Effective Date value is less than the start of the Permissive Dialing Period, then the new NPA-NXX-X's Effective Date is equal to the start of the Permissive Dialing Period.
NPAC SMS shall reject the request and generate an error message to the NPAC Personnel when a request is made to modify a new NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, and the NPA-NXX is scheduled for an NPA Split.
NPAC SMS shall, upon modification of an NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, automatically modify the old or new NPA-NXX-X for an NPA-NXX currently in Permissive Dialing in an NPA Split.
NPAC SMS shall, upon de-pooling of an old NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, prior to the start of the Permissive Dialing Period, automatically de-pool the corresponding entry for the new NPA-NXX-X for an NPA-NXX scheduled for an NPA Split, at the time the requested NPA-NXX-X is de-pooled.
NPAC SMS shall reject the request and generate an error message to the NPAC Personnel when a request is made to de-pool a new NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, and the NPA-NXX is scheduled for an NPA Split.
NPAC SMS shall, upon de-pool of an NPA-NXX-X in the Number Pooling NPA-NXX-X Holder Information, automatically de-pool the old or new NPA-NXX-X for an NPA-NXX currently in Permissive Dialing in an NPA Split, at the time the requested NPA-NXX-X is de-pooled.
NPAC SMS shall automatically delete the old NPA-NXX-X from the Number Pooling NPA-NXX-X Holder Information, upon reaching the end of the permissive dialing period for the old NPA-NXX of the NPA-NXX-X.
NPAC SMS shall, upon the start of permissive dialing for an NPA Split, convert the old NPA-NXX to the new NPA-NXX in the Number Pooling Block Information.
NPAC SMS shall, upon the removal of an NPA-NXX from an NPA Split, after the start of permissive dialing, reinstate the original NPA for the NXX-X in the Block Holder Information.
NPAC SMS shall convert the old NPA-NXX to the new NPA-NXX for a Block involved in an NPA Split upon creation in the Number Pooling Block Holder Information, if the old NPA-NXX is currently in permissive dialing.
NPAC SMS shall broadcast a Block "create" to an EDR Local SMS, via the NPAC SMS to Local SMS Interface, by sending a Block using the new NPA-NXX for an NPA-NXX that is currently in permissive dialing.
NPAC SMS shall broadcast a Block "modify active" to an EDR Local SMS, via the NPAC SMS to Local SMS Interface, by sending a Block using the new NPA-NXX for an NPA-NXX that is currently in permissive dialing.
NPAC SMS shall broadcast a Block "delete" request to an EDR Local SMS, via the NPAC SMS to Local SMS Interface, by sending a Block using the new NPA-NXX for an NPA-NXX that is currently in permissive dialing.
NPAC SMS shall accept a mass update request from NPAC personnel that spans one or more Blocks that are part of an NPA Split that is currently in permissive dialing only when the new NPA-NXX is used.
NPAC SMS shall broadcast a mass update that could span one or more Blocks to an EDR Local SMS, via the NPAC SMS to Local SMS Interface, using the new NPA-NXX for an NPA-NXX that is currently in permissive dialing.
NPAC SMS shall create an old Block with a new version ID for an active Block involved in an NPA split at the start of permissive dialing for the old NPA.
NPAC SMS shall allow a Service Provider to create a filtered NPA-NXX for a given Local SMS, via the NPAC SMS to Local SMS interface and the SOA to NPAC SMS interface, which results in the SMS not broadcasting NPA-NXX information, subscription versions, NPA-NXX-X information or Number Pool Blocks with the filtered NPA-NXX to the Local SMS.
NPAC SMS shall allow a Service Provider to delete a filtered NPA-NXX for a given Local SMS, via the NPAC SMS to Local SMS interface and the SOA to NPAC SMS interface, which results in the SMS broadcasting NPA-NXX information, subscription versions, NPA-NXX-X information and Number Pool Blocks with the filtered NPA-NXX to the given Local SMS.
NPAC SMS shall allow a Service Provider to query filtered NPA-NXXs for a given Local SMS via the NPAC SMS to Local SMS interface and the SOA to NPAC SMS interface.
NPAC SMS shall support definition and processing of long and short business hours and days for operations involving business time calculation.
NPAC SMS short business days shall be Monday through Friday excluding NPAC operations-defined holidays.
NPAC SMS long business days shall be Monday through Saturday excluding NPAC operations-defined holidays.
NPAC SMS shall provide long and short Business Day Duration tunable parameters.
NPAC SMS shall allow the NPAC SMS Administrator to modify the long and short Business Day Duration tunable parameters.
NPAC SMS shall default the short Business Day Duration tunable parameter to 12 hours.
NPAC SMS shall default the long Business Day Duration tunable parameter to 12 hours.
NPAC SMS shall provide long and short Business Day Start Time tunable parameters.
NPAC SMS shall set the long and short Business Day Start Time tunable parameters to the value specified by the contracting region.
NPAC SMS shall default the short Business Day Start Time tunable parameter to 7:00 AM, Central Time.
NPAC SMS shall default the long Business Day Start Time tunable parameter to 8:00 AM, Central Time.
NPAC SMS shall allow NPAC operations personnel to add or delete business holidays.
NPAC SMS shall allow NPAC personnel to store a primary service provider ID with the associated service provider ID that it will service.
NPAC SMS shall validate that the primary and associated service provider IDs specified in the NPAC Customer Associated Service Provider Information are valid service provider IDs defined in the NPAC SMS.
NPAC SMS shall validate that the associated service provider ID is not already specified as a primary or associated service provider ID in the NPAC Customer Associated Service Provider Information.
Associated service providers using services from another primary service provider's SOA must use another service provider ID if they choose to interact with the NPAC independently from the primary service provider.
NPAC SMS shall report an error to the user and reject the addition of NPAC Customer Associated Service Provider Information if validation errors occur.
NPAC SMS shall prevent a service provider from being deleted in the NPAC SMS if it exists in the NPAC Customer Associated Service Provider Information as a primary or associated service provider ID.
NPAC SMS shall reject any SOA to NPAC SMS association attempt by a Service Provider ID that is a service provider associated with the primary Service Provider ID in the NPAC Customer Associated Service Provider Information.
NPAC SMS shall accept and send keys from the key lists associated with the primary service provider for all SOA to NPAC SMS messages sent over the association for the primary service provider.
NPAC SMS shall send all SOA notifications for an associated Service Provider over the SOA to NPAC SMS interface association for the primary service provider.
NPAC SMS shall apply NPA-NXX filters for the associated Service Provider ID before sending them over the SOA to NPAC SMS interface association for the primary service provider.
NPAC SMS shall support messages containing primary and associated service provider IDs that are interleaved over the SOA to NPAC SMS interface association for the primary service provider.
NPAC SMS shall support the recovery of network data or notifications for an associated Service Provider over a SOA to NPAC SMS association in recovery mode for a primary service provider.
NPAC SMS shall provide a mechanism that allows a Service Provider to recover network data and subscription data in file format.
NPAC SMS shall allow network data only, subscription data only, or both, as selection criteria for bulk data download file generation.
NPAC SMS shall require, as selection criteria for network bulk data download file generation, a Service Provider filter of either a single Service Provider ID or 'All Service Providers'.
NPAC SMS shall require, as selection criteria for subscription bulk data download file generation, a Service Provider filter of either a single Service Provider ID or 'All Service Providers', and a start NPA-NXX station.
NPAC SMS shall accept, as optional selection criteria for subscription bulk data download file generation, an end NPA-NXX station, a start activation date and time, and an end activation date and time.
NPAC SMS shall automatically put the subscription bulk data download file into the FTP sub-directory of the Service Provider, based on SPID, that requested the creation of the subscription bulk data download file.
NPAC SMS shall provide a mechanism to indicate whether a Service Provider supports receiving the NPA-NXX-X data, by downloading this data to their SOA via the SOA to NPAC SMS Interface, using the Number Pooling NPA-NXX-X Object.
NPAC SMS shall default the SOA NPA-NXX-X Indicator to False.
NPAC SMS shall allow the NPAC SMS Administrator to modify the SOA NPA-NXX-X Indicator on the NPAC Customer record.
NPAC SMS shall provide a mechanism to indicate whether a Service Provider supports receiving the NPA-NXX-X data, by downloading this data to their Local SMS via the NPAC SMS to Local SMS Interface, using the Number Pooling NPA-NXX-X Object.
NPAC SMS shall default the LSMS NPA-NXX-X Indicator to False.
NPAC SMS shall allow the NPAC SMS Administrator to modify the LSMS NPA-NXX-X Indicator on the NPAC Customer record.
NPAC SMS shall provide a mechanism to indicate whether a Service Provider supports Efficient Data Representation, by downloading this data to their Local SMS via the NPAC SMS to Local SMS Interface, using the Number Pooling Block Object.
NPAC SMS shall default the EDR Indicator to False.
NPAC SMS shall allow the NPAC SMS Administrator to modify the EDR Indicator on the NPAC Customer record.
NPAC SMS shall allow NPAC Personnel to add, modify, delete, and query NPA-NXX-X Holder information via the NPAC Administrative Interface.
NPAC SMS shall validate that the NPA-NXX specified in the addition of Number Pooling NPA-NXX-X Holder information is a valid NPA-NXX defined in the NPAC SMS.
NPAC SMS shall validate that the effective date of the NPA-NXX-X is equal to, or greater than, the effective date of the NPA-NXX as defined in the NPAC SMS.
NPAC SMS shall validate that the NPA-NXX-X specified in the addition of Number Pooling NPA-NXX-X Holder Information is not a duplicate for another entry in the Number Pooling NPA-NXX-X Holder Information.
NPAC SMS shall apply NPA-NXX Filters to NPA-NXX-X downloads to the Local SMSs.
NPAC SMS shall download Number Pooling NPA-NXX-X Information, for additions, modifications, and deletions, using the Number Pooling NPA-NXX-X Object, via the SOA to NPAC SMS Interface if the Service Provider's SOA NPA-NXX-X indicator is True.
NPAC SMS shall suppress the download of Number Pooling NPA-NXX-X Information, for additions, modifications, and deletions, via the SOA to NPAC SMS Interface if the Service Provider's SOA NPA-NXX-X indicator is False.
NPAC SMS shall apply NPA-NXX Filters to NPA-NXX-X downloads to the SOAs.
NPAC SMS shall report an error to the NPAC Personnel and reject the addition or modification of Number Pooling NPA-NXX-X Holder information, or the addition of an NPA Split, if validation errors occur.
NPAC SMS shall provide a mechanism for NPAC Personnel to select NPAC Origination or SOA Origination for the Block data, when creating NPA-NXX-X Holder information, via the NPAC Administrative Interface.
NPAC SMS shall provide a mechanism for NPAC Personnel to request NPAC Block Creation for either immediate execution, once the Effective Date has been reached, or at a future date and time, via the NPAC Administrative Interface.
NPAC SMS shall validate that the 'Scheduled Date and Time for Block Activation' field in the NPAC Administrative Interface, is a valid date and time, and is greater than or equal to the NPA-NXX-X Effective Date.
NPAC SMS shall require NPAC Personnel to enter applicable Block routing data, via the NPAC Administrative Interface, when the NPAC Origination has been selected by NPAC Personnel while creating NPA-NXX-X Holder information, or when re-scheduling a Block Create Event.
NPAC SMS shall validate that the LRN specified in the scheduling or re-scheduling of Number Pooling Block Holder information is a valid LRN defined in the NPAC SMS for the Block Holder.
NPAC SMS shall provide a mechanism for NPAC Personnel to modify a Block Create Event that has been previously entered, but not yet executed, via the NPAC Administrative Interface.
NPAC SMS shall allow NPAC Personnel to modify the scheduled date and time for an NPAC initiated Block Create Event to a different date and time that is on or after the NPA-NXX-X effective date.
NPAC SMS shall allow NPAC Personnel to modify the routing data for an NPAC initiated Block Create Event.
NPAC SMS shall provide a mechanism for NPAC Personnel to re-schedule a Block Create, for an existing NPA-NXX-X, via the NPAC Administrative Interface.
NPAC SMS shall provide a mechanism where the re-schedule of a Block Create can be immediately executed or scheduled for a future date and time.
NPAC SMS shall reject the re-schedule of a Block Create for immediate execution prior to the effective date of the NPA-NXX-X.
NPAC SMS shall allow the re-schedule of a Block Create if the Block does not exist in the NPAC SMS, or if the Block exists with a status of Old without a Failed SP List.
NPAC SMS shall only allow a single Block Create Event, that has not been previously executed for this Block, to exist in the NPAC SMS.
NPAC SMS shall, after displaying the Pending-Like No-Active Subscription Versions report to the screen, allow the NPAC Personnel to choose an output destination for the report when NPAC Personnel are re-scheduling a Block Creation request for immediate execution.
NPAC SMS shall require NPAC personnel to specify the NPA-NXX-X Holder SPID, the NPA-NXX-X, and the Effective Date, as defined in the Number Pooling NPA-NXX-X Holder Information data model.
NPAC SMS shall validate that the NPA-NXX-X Holder SPID is a valid Service Provider in the NPAC SMS.
NPAC SMS shall, after displaying the Pending-Like No-Active Subscription Versions and Pending-Like Port-to-Original Subscription Versions Report to the screen, allow the NPAC Personnel to choose an output destination for the report.
NPAC SMS shall provide a NPA-NXX-X Holder Effective Date Window tunable parameter which is defined as the minimum length of time between the current date and the effective date when Creating a NPA-NXX-X in the NPAC SMS.
NPAC SMS shall default the NPA-NXX-X Holder Effective Date Window tunable parameter to five business days.
NPAC SMS shall verify that the Effective Date for the NPA-NXX-X Holder data is equal to, or greater than, the current date plus the value of the NPA-NXX-X Holder Effective Date Window tunable parameter, excluding those automatically created by NPA Split processing.
NPAC SMS shall set the time portion of the Effective Date Timestamp to 00:00 and not allow the NPAC Personnel to modify the time portion of the Effective Date on the NPAC Administrative Interface.
NPAC SMS shall, upon successful validation, store the NPA-NXX-X in the NPAC SMS, and broadcast the NPA-NXX-X to the Service Providers.
NPAC SMS shall allow NPAC personnel to modify the effective date for an NPA-NXX-X as stored in the NPAC SMS via the NPAC Administrative Interface.
NPAC SMS shall allow the NPAC personnel to modify the effective date for an NPA-NXX-X if the current date is less than the effective date for the NPA-NXX-X.
NPAC SMS shall, upon modifying the effective date for an NPA-NXX-X, and where the Block Creation was a scheduled event within the NPAC SMS, also modify the corresponding date for that Block Create scheduled event.
NPAC SMS shall allow the NPAC SMS Administrator to modify the NPA-NXX-X Holder Effective Date Window tunable parameter.
NPAC SMS shall verify that the modification of the Effective Date for the NPA-NXX-X Holder data is equal to, or greater than, the current date.
NPAC SMS shall verify that the modification of the Effective Date for the NPA-NXX-X Holder data is equal to, or greater than, the NPA-NXX-X Holder creation date plus the value of the NPA-NXX-X Holder Effective Date Window tunable parameter.
NPAC SMS shall, upon successful validation, store the updates to the NPA-NXX-X in the NPAC SMS, and broadcast the updated NPA-NXX-X to the Service Providers.
NPAC SMS shall allow NPAC personnel to delete the NPA-NXX-X holder information for an NPA-NXX-X as stored in the NPAC SMS.
NPAC SMS shall allow NPAC personnel to delete the NPA-NXX-X holder information for a single NPA-NXX-X at a time, via the NPAC Administrative Interface.
NPAC SMS shall reject the request and issue an error message to the NPAC personnel at the time of NPA-NXX-X Deletion, if there are any TNs within the 1K Block that contain an SV where the SV is a Port-To-Original port.
NPAC SMS shall reject the request and issue an error message to the NPAC personnel at the time of NPA-NXX-X Deletion, if the associated Block contains a status other than Active, or the Failed SP List contains any SPIDs.
NPAC SMS shall reject the request and issue an error message to the NPAC personnel at the time of NPA-NXX-X Deletion, if there are any Subscription Versions with a status of sending as a result of a disconnect request for that given Subscription Version.
NPAC SMS shall, after displaying the Pending-Like With Active POOL Subscription Versions and Pending-Like Port-to-Original Subscription Versions Report to the screen, allow the NPAC Personnel to choose an output destination for the report.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes broadcasting the deletion of SVs to non-EDR Local SMSs.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes broadcasting the deletion of Blocks to the EDR Local SMSs.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes receiving a successful response from all EDR and non-EDR Local SMSs.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes updating all SVs and Blocks on the NPAC SMS.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes deleting the NPA-NXX-X Holder information from the NPAC SMS.
NPAC SMS shall delete the NPA-NXX-X Holder Information for a 1K Block through a multi-step process that includes broadcasting the deletion of NPA-NXX-X to the NPA-NXX-X enabled SOAs and Local SMSs.
NPAC SMS shall only delete the NPA-NXX-X Holder Information after successfully updating all associated SVs and Blocks to a status of 'Old' with no Failed SP List.
NPAC SMS shall delete an associated Block Create Scheduled Event that has not been executed when deleting the NPA-NXX-X Holder Information.
NPAC SMS shall notify all accepting Local SMSs and SOAs of the NPA-NXX, effective date, and owning Service Provider when no porting activity has occurred in the NPA-NXX, immediately after creation of a Number Pooling NPA-NXX-X, including those automatically created by NPA Split processing.
NPAC SMS shall return to the NPAC Personnel or requesting Service Provider all NPA-NXX-Xs that match the query selection criteria, as listed in the NPA-NXX-X Holder Information Data Model, for an NPA-NXX-X as stored in the NPAC SMS.
NPAC SMS shall provide a separate bulk data download file that contains all NPA-NXX-Xs in the NPAC SMS when generating bulk data download files for Network Data.
NPAC SMS shall apply NPA-NXX Filters to NPA-NXX-Xs in the creation of a bulk data download file.
NPAC SMS shall automatically put the NPA-NXX-X bulk data download file into the FTP sub-directory of the Service Provider, based on SPID, that requested the creation of the bulk data download file for Network Data.
NPAC SMS shall allow NPAC Personnel to add, modify, or query Block Holder information via the NPAC Administrative Interface.
NPAC SMS shall download Number Pooling Block Information for additions, modifications, deletions, re-sends, and resync using the Number Pooling Block Object, via the NPAC SMS to Local SMS Interface if the EDR indicator is True at the time a request is processed by the NPAC SMS.
NPAC SMS shall use the EDR Indicator when processing a request for Number Pooling Block Information, but not during the retry functionality.
NPAC SMS shall maintain data integrity for LRN and GTT data between a Number Pooling Block and the corresponding Subscription Versions with LNP Type of POOL in that 1K Block in the NPAC SMS.
NPAC SMS shall verify the SPID of the access control matches the owner of the association or one of its secondary providers.
NPAC SMS shall, upon receiving a block activate request, validate that the SPID and the NPA-NXX-X attributes in the request are the same as the SPID and the NPA-NXX-X in a single entry in the NPA-NXX-X Holder Information.
NPAC SMS shall reject a request to create a Block if the current date is prior to the effective date of the Number Pooling NPA-NXX-X as defined in the NPAC SMS.
NPAC SMS shall validate that the LRN specified in the addition or modification of Number Pooling Block Holder information is a valid LRN defined in the NPAC SMS for the Block Holder.
NPAC SMS shall validate that the NPA-NXX-X specified in the addition of Number Pooling Block Holder Information does not already exist in the Number Pooling Block Holder Information, except for a status of 'Old' where the Block's Failed SP List is empty.
NPAC SMS shall send all SOA notifications to the current SP for updates on Blocks when the Block SOA Origination is True.
NPAC SMS shall suppress all SOA notifications to the current SP for updates on Blocks when the Block SOA Origination is False.
NPAC SMS shall consider an EDR Local SMS to be discrepant and shall update the Block Failed SP List, based on an EDR Local SMS failing to process the Block Object, for an addition, modification, deletion, re-send, resync, or mass update.
NPAC SMS shall ensure that the status for Block broadcasts to EDR Local SMSs and Subscription Versions with LNP Type of POOL broadcasts to non-EDR Local SMSs are synchronized.
NPAC SMS shall ensure that the Block Failed SP List and the Subscription Versions Failed SP Lists for Block broadcasts to EDR Local SMSs and Subscription Versions broadcasts to non-EDR Local SMSs are synchronized.
NPAC SMS shall remove a non-EDR Service Provider from the Block Failed SP List when the Service Provider is no longer on the Subscription Version Failed SP List for all subscription versions in the 1K Block.
NPAC SMS shall remove an EDR Service Provider from all subscription versions' Failed SP List when the Service Provider is no longer on the Block Failed SP List.
NPAC SMS shall generate a unique alarmable error message when a Block's status is initially set to either Partial Failure or Failed for Block Activation requests initiated by NPAC Personnel.
NPAC SMS shall generate a unique alarmable error message when a Block's status is updated to Active with a Failed SP List, for each occurrence, for Block Modification requests initiated by NPAC Personnel.
NPAC SMS shall generate a unique alarmable error message when a Block's status is updated to 'Old' with a Failed SP List for Block Deletion requests that were initiated through the NPA-NXX-X deletion by NPAC Personnel.
NPAC SMS shall provide a mechanism to stop the recurring page to NPAC Personnel whenever the Block's status is set to Active and the Block Failed SP List is empty, or, the Block's status is set to Old and the Block Failed SP List is empty.
NPAC SMS shall apply NPA-NXX Filters to Block broadcasts to the Local SMSs.
NPAC SMS shall reject a request to create a Block by a Service Provider via the NPAC SMS to Local SMS Interface and will return an error message to the LSMS.
NPAC SMS shall require NPAC personnel or Service Provider via the SOA to NPAC SMS Interface to specify the Block Holder SPID, the NPA-NXX-X, and the initial routing information, as defined in the Number Pooling Block Holder Information.
NPAC SMS shall, upon successfully creating a Block, set the Block's status to sending, and broadcast an addition of a Block to EDR Local SMSs via the NPAC SMS to Local SMS Interface.
NPAC SMS shall update the Activation Broadcast Complete Timestamp of the Block upon completion of the broadcast and the first successful response for either an EDR or non-EDR Local SMS.
NPAC SMS shall allow NPAC Personnel to modify the SOA Origination Indicator on the NPAC Block record via the NPAC Administrative Interface.
NPAC SMS shall suppress the broadcast to a Local SMS of a modification to a Block's SOA Origination Indicator.
NPAC SMS shall suppress the creation of a Block modification notification when the Block's SOA Origination Indicator is modified to False.
NPAC SMS shall reject a request to modify a Block by a Service Provider via the NPAC SMS to Local SMS Interface and will return an error message to the LSMS.
NPAC SMS shall allow a Service Provider via the SOA to NPAC SMS Interface to modify Block data by specifying either Block ID, or NPA-NXX-X value and status, in the request.
NPAC SMS shall, upon successfully modifying a Block and setting the Block's status to sending, broadcast a modification of a Block to EDR Local SMSs via the NPAC SMS to Local SMS Interface.
NPAC SMS shall update the Modify Broadcast Complete Timestamp of the Block upon completion of the broadcast and the first successful response for either an EDR or non-EDR Local SMS.
NPAC SMS shall create an old Block with a new version ID for an active Block prior to modification.
NPAC SMS shall broadcast no data to the Local SMSs due to the creation of an old Block with a new version ID for an active Block prior to modification.
NPAC SMS shall not allow NPAC Personnel to request a delete of a Block in the NPAC SMS.
NPAC SMS shall reject a request to delete a Block by a Service Provider via the SOA to NPAC SMS interface and will return an error message to the SOA.
NPAC SMS shall reject a request to delete a Block by a Service Provider via the NPAC SMS to Local SMS Interface and will return an error message to the LSMS.
NPAC SMS shall not allow Service Provider Personnel to request a delete of a Block in the NPAC SMS via the NPAC SOA Low-tech Interface.
NPAC SMS shall, upon processing a valid request to delete an NPA-NXX-X, update the status of the Block at the start of the broadcast to the Local SMSs from an active status to a sending status.
NPAC SMS shall, upon setting the Block's status to sending, broadcast a delete of a Block to EDR LSMSs via the NPAC SMS to Local SMS Interface.
NPAC SMS shall update the Disconnect Complete Timestamp of the Block upon completion of the broadcast and the first successful response for either an EDR or non-EDR Local SMS.
NPAC SMS shall create an old Block with a new version ID for a disconnected Block when the NPA-NXX-X Holder Information de-pool request is received.
NPAC SMS shall broadcast no data to the Local SMSs due to the creation of an old Block with a new version ID for a disconnected Block when the NPA-NXX-X Holder Information de-pool request is received.
NPAC SMS shall allow NPAC Personnel to query the block holder information for all data as listed in the Block Holder Information Data Model for a 1K Block as stored in the NPAC SMS.
NPAC SMS shall return, to the NPAC Personnel or requesting Service Provider, all Block data that match the query selection criteria.
NPAC SMS shall apply NPA-NXX Filters to Block re-sends to the Local SMSs.
NPAC SMS shall allow NPAC Personnel to re-send Block Information, one Block at a time, via the NPAC Administrative Interface.
NPAC SMS shall allow NPAC Personnel to re-send Block Information, to a single Service Provider or all Service Providers in the Block Failed SP List, via the NPAC Administrative Interface.
NPAC SMS shall use the value in the Service Provider's EDR Indicator to determine the type of data to re-send to the Service Provider when a re-send request is initiated.
NPAC SMS shall re-send Block Information to an EDR Local SMS via the NPAC SMS to Local SMS Interface.
NPAC SMS shall re-send Block Information to a non-EDR Local SMS via the NPAC SMS to Local SMS Interface.
NPAC SMS shall update the status of the failed Block, specified in the re-send request, from a failed status to a sending status.
NPAC SMS shall update the status of the partial failure Block, specified in the re-send request, from a partial failure status to a sending status.
NPAC SMS shall update the status of the active Block with a Failed SP List, specified in the re-send request, from an active status to a sending status.
NPAC SMS shall update the status of the old Block with a Failed SP List, specified in the re-send request, from an old status to a sending status.
NPAC SMS shall, upon setting the Block's status to sending, broadcast a re-send of a Block to EDR LSMSs via the NPAC SMS to Local SMS Interface.
NPAC SMS shall update the Block Failed SP List of the Block and the Subscription Version Failed SP List of each Subscription Version with LNP Type of POOL by removing the previously failed Local SMS upon a successful re-send to a previously failed Local SMS.
NPAC SMS shall allow NPAC personnel to request a bulk data download file for Block data via the NPAC Administrative Interface.
NPAC SMS shall allow NPAC Personnel to select either Active and Partial Failure Blocks Only or Latest View of Block Activity, and shall use the selected choice for Block data.
NPAC SMS shall use the Active and Partial Failure Blocks Only selection to only include Blocks with a status of either Active or Partial Failure in the Block Bulk Data Download file.
NPAC SMS shall use the Start Time Range entry field as an inclusive start range in GMT and the End Time Range entry field as an inclusive ending range in GMT for Block data that were broadcast during the specified Time Range.
NPAC SMS shall use the Start and End Time Range entry fields to include Block data, based on the Activation Broadcast Timestamp, Modify Broadcast Timestamp, and Disconnect Broadcast Timestamp, in the NPAC's Block Data Model when generating the file for the Latest View of Block Activity selection.
NPAC SMS shall use the first Block Range entry field as an inclusive start range, and the second Block Range entry field as an inclusive ending range, for Block data.
NPAC SMS shall provide a bulk data download file, based on the selection criteria, that contains all Blocks in the NPAC SMS, regardless of the value in the Service Provider's EDR Indicator.
NPAC SMS shall sort the Block Bulk Data Download file in ascending order based on the value in the NPA-NXX-X attribute.
NPAC SMS shall apply NPA-NXX Filters to Blocks in the creation of bulk data download files.
NPAC SMS shall automatically put the bulk data download file into the FTP sub-directory of the Service Provider that requested the creation of the bulk data download file.
Upon entrance to the movie component, the introductory movie will begin playing.
If a mouse click is received, this component will terminate the movie and forward the user to the main menu component.
Otherwise, the movie will continue to its completion and the user will be moved to the main menu.
This component will wait until the user selects a button.
At that time, the user will be forwarded to the game sequence component or the Denominators' web page, depending on the button selected.
This component will display a question, and then wait until the user chooses an answer.
If the user selects the correct answer, a message to this effect will be displayed and the component will move to the next question.
If the incorrect answer is selected, this component will inform the user of this and give them another chance to answer the question.
At certain "critical points," this component will choose different directions in the plot based on whether the question at the critical point was answered correctly.
After the user has proceeded through a set number of questions, they will be directed to the ending scene component.
This component will wait until the user selects either to return to the main menu or to exit the game.
The component will wait for the user to click a submission button for each question.
After the button is clicked, the component will check that the inputted data is complete and makes sense in the context of the updated question.
This component will wait for a user to click a link, and then follow that link.
The BE shall receive LTA or Speed Dump Lag Frames from the Correlator.
The transfer shall take place in such a manner that all data needed to perform any Fourier Transform shows up on a single processor.
The BE shall deliver formatted final results to the E2E System.
The BE shall produce all data needed by the E2E System for archiving and further processing.
The BE shall acknowledge receipt of all data received from M&C.
The BE shall notify M&C of any detected interruptions of data delivery from the Correlator.
The BE shall verify successful delivery of output to the E2E.
The BE shall guarantee safe delivery of all internal messages.
BE shall be able to handle lag frames of less than 128 values.
The BE shall be able to handle lag sets up to a maximum size of 262,144 values.
The BE shall receive incoming data packets from the Correlator to Backend network interface.
The BE shall verify the successful receipt of incoming data from the Correlator.
The BE shall store input data records in a memory buffer and track buffer locations of all input data until data processing is complete.
The BE shall respond to incoming correlator mode changes, user optional processing sequence and/or parameter changes, and other external inputs that affect the data processing pipeline.
The BE shall assemble the received input data into continuous time series.
The BE shall ensure that time series data is correctly ordered and contains valid data values along its entire extent.
The BE shall replace all invalid data with zero values.
The BE shall keep track of data invalids.
The BE shall be able to apply normalizations based on reported data invalid counts.
The BE shall be able to apply corrections based on state count and/or quantizer power measurement data.
The BE shall be able to make time stamp adjustments as required by the observational mode and correlator output parameters.
The BE shall be able to perform windowing operations prior and subsequent to Fourier Transform.
The BE shall be able to apply user selected time domain processes.
These processes should be constructed to be chainable and repeatable in the chain.
The BE shall be able to perform Fourier Transform on the lag set time series.
This process must be able to accept as input the output of any of the time domain processes.
The BE shall be able to apply user selected frequency domain processes.
The BE shall keep track of the number of samples or dumps integrated in each spectral channel.
The BE shall combine the finished spectra with meta and auxiliary data to form suitably formatted output data sets.
The BE shall store formatted output data records in a memory buffer with backup disk buffering.
The BE shall send output data to the E2E System.
The BE shall verify that all sent data was successfully received.
The BE shall monitor data transfer rates from the Correlator and to the E2E.
The BE shall monitor the overall data processing rate.
The BE shall trap, flag and repair infs, NaNs, underflows, overflows and other computation errors.
The BE shall periodically or upon request check PIDs and assure that all started tasks are alive and running.
The BE shall periodically or upon request check Backend physical processors and assure that all needed processors are alive and responding.
The BE shall periodically or upon request check all Backend internal networks and assure that all communication connections are intact and functioning.
The BE shall be able to initiate a processing task on any Backend processor.
The BE shall be able to signal a kill for any Backend process.
The BE shall be able to alter the priority of any of the BE tasks.
The BE shall be able to initiate a reboot of any Backend physical processor.
The BE shall be able to initiate a reboot of any internal network.
The BE shall be able to redistribute internal workload among its processors.
BE processes shall not violate archive data requirements.
All processes shall be reversible.
All users of the system shall login using some form of unique identification.
All login attempts shall be done in a secure manner.
A system administrator shall have unrestricted access to all aspects of the system.
Each user shall have a set of system access properties that defines the user's privileges within the system.
The administrator shall have the ability to create and add a new user to the system.
The administrator shall have the ability to remove a user from the system.
The administrator shall have the ability to edit a user's system access properties.
The administrator shall have the ability to block all access to the system for all users or selectively by user.
